

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Apr 09 22:08:21 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     _TMR0	set	4054
    18  0000                     _TMR1	set	4046
    19  0000                     _BAUDCON2bits	set	3952
    20  0000                     _INTCONbits	set	4082
    21  0000                     _LATCbits	set	3979
    22  0000                     _OSCCONbits	set	4051
    23  0000                     _OSCTUNEbits	set	3995
    24  0000                     _PIE1bits	set	3997
    25  0000                     _PIR1bits	set	3998
    26  0000                     _PIR3bits	set	4004
    27  0000                     _PORTAbits	set	3968
    28  0000                     _RCREG2	set	3956
    29  0000                     _RCSTA2bits	set	3953
    30  0000                     _SPBRG2	set	3957
    31  0000                     _T0CON	set	4053
    32  0000                     _T0CONbits	set	4053
    33  0000                     _T1CONbits	set	4045
    34  0000                     _TMR0L	set	4054
    35  0000                     _TRISAbits	set	3986
    36  0000                     _TRISCbits	set	3988
    37  0000                     _TX2REG	set	3955
    38  0000                     _TXSTA2bits	set	3954
    39  0000                     _TX2IF	set	32036
    40                           
    41                           	psect	smallconst
    42  001000                     __psmallconst:
    43                           	opt stack 0
    44  001000  00                 	db	0
    45  001001                     STR_2:
    46  001001  2D                 	db	45
    47  001002  2D                 	db	45
    48  001003  2D                 	db	45
    49  001004  2D                 	db	45
    50  001005  2D                 	db	45
    51  001006  2D                 	db	45
    52  001007  2D                 	db	45
    53  001008  2D                 	db	45
    54  001009  2D                 	db	45
    55  00100A  2D                 	db	45
    56  00100B  2D                 	db	45
    57  00100C  2D                 	db	45
    58  00100D  2D                 	db	45
    59  00100E  48                 	db	72	;'H'
    60  00100F  45                 	db	69	;'E'
    61  001010  4C                 	db	76	;'L'
    62  001011  50                 	db	80	;'P'
    63  001012  2D                 	db	45
    64  001013  2D                 	db	45
    65  001014  2D                 	db	45
    66  001015  2D                 	db	45
    67  001016  2D                 	db	45
    68  001017  2D                 	db	45
    69  001018  2D                 	db	45
    70  001019  2D                 	db	45
    71  00101A  2D                 	db	45
    72  00101B  2D                 	db	45
    73  00101C  2D                 	db	45
    74  00101D  2D                 	db	45
    75  00101E  0D                 	db	13
    76  00101F  0A                 	db	10
    77  001020  00                 	db	0
    78  001021                     STR_6:
    79  001021  6C                 	db	108	;'l'
    80  001022  69                 	db	105	;'i'
    81  001023  67                 	db	103	;'g'
    82  001024  68                 	db	104	;'h'
    83  001025  74                 	db	116	;'t'
    84  001026  20                 	db	32
    85  001027  73                 	db	115	;'s'
    86  001028  68                 	db	104	;'h'
    87  001029  6F                 	db	111	;'o'
    88  00102A  75                 	db	117	;'u'
    89  00102B  6C                 	db	108	;'l'
    90  00102C  64                 	db	100	;'d'
    91  00102D  20                 	db	32
    92  00102E  62                 	db	98	;'b'
    93  00102F  65                 	db	101	;'e'
    94  001030  20                 	db	32
    95  001031  6F                 	db	111	;'o'
    96  001032  6E                 	db	110	;'n'
    97  001033  00                 	db	0
    98  001034                     STR_7:
    99  001034  55                 	db	85	;'U'
   100  001035  6E                 	db	110	;'n'
   101  001036  6B                 	db	107	;'k'
   102  001037  6E                 	db	110	;'n'
   103  001038  6F                 	db	111	;'o'
   104  001039  77                 	db	119	;'w'
   105  00103A  6E                 	db	110	;'n'
   106  00103B  20                 	db	32
   107  00103C  6B                 	db	107	;'k'
   108  00103D  65                 	db	101	;'e'
   109  00103E  79                 	db	121	;'y'
   110  00103F  20                 	db	32
   111  001040  25                 	db	37
   112  001041  63                 	db	99	;'c'
   113  001042  0D                 	db	13
   114  001043  0A                 	db	10
   115  001044  00                 	db	0
   116  001045                     STR_3:
   117  001045  3F                 	db	63	;'?'
   118  001046  3A                 	db	58	;':'
   119  001047  20                 	db	32
   120  001048  68                 	db	104	;'h'
   121  001049  65                 	db	101	;'e'
   122  00104A  6C                 	db	108	;'l'
   123  00104B  70                 	db	112	;'p'
   124  00104C  20                 	db	32
   125  00104D  6D                 	db	109	;'m'
   126  00104E  65                 	db	101	;'e'
   127  00104F  6E                 	db	110	;'n'
   128  001050  75                 	db	117	;'u'
   129  001051  0D                 	db	13
   130  001052  0A                 	db	10
   131  001053  00                 	db	0
   132  001054                     STR_5:
   133  001054  6F                 	db	111	;'o'
   134  001055  3A                 	db	58	;':'
   135  001056  09                 	db	9
   136  001057  6F                 	db	111	;'o'
   137  001058  6B                 	db	107	;'k'
   138  001059  0D                 	db	13
   139  00105A  0A                 	db	10
   140  00105B  00                 	db	0
   141  00105C                     STR_4:
   142  00105C  6F                 	db	111	;'o'
   143  00105D  3A                 	db	58	;':'
   144  00105E  20                 	db	32
   145  00105F  6B                 	db	107	;'k'
   146  001060  0D                 	db	13
   147  001061  0A                 	db	10
   148  001062  00                 	db	0
   149  001063                     STR_8:
   150  001063  3E                 	db	62	;'>'
   151  001064  20                 	db	32
   152  001065  00                 	db	0
   153  0000                     
   154                           ; #config settings
   155  001066  00                 	db	0	; dummy byte at the end
   156  0000                     
   157                           	psect	cinit
   158  0011F4                     __pcinit:
   159                           	opt stack 0
   160  0011F4                     start_initialization:
   161                           	opt stack 0
   162  0011F4                     __initialization:
   163                           	opt stack 0
   164                           
   165                           ; Clear objects allocated to COMRAM (8 bytes)
   166  0011F4  EE00  F021         	lfsr	0,__pbssCOMRAM
   167  0011F8  0E08               	movlw	8
   168  0011FA                     clear_0:
   169  0011FA  6AEE               	clrf	postinc0,c
   170  0011FC  06E8               	decf	wreg,f,c
   171  0011FE  E1FD               	bnz	clear_0
   172  001200                     end_of_initialization:
   173                           	opt stack 0
   174  001200                     __end_of__initialization:
   175                           	opt stack 0
   176  001200  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177  001202  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178  001204  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  001206  6EF8               	movwf	tblptru,c
   180  001208  0100               	movlb	0
   181  00120A  EF34  F008         	goto	_main	;jump to C main() function
   182                           tblptru	equ	0xFF8
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           
   186                           	psect	bssCOMRAM
   187  000021                     __pbssCOMRAM:
   188                           	opt stack 0
   189  000021                     _duty_cycle:
   190                           	opt stack 0
   191  000021                     	ds	4
   192  000025                     _pwm_channel:
   193                           	opt stack 0
   194  000025                     	ds	4
   195                           tblptru	equ	0xFF8
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199                           	psect	cstackCOMRAM
   200  000001                     __pcstackCOMRAM:
   201                           	opt stack 0
   202  000001                     ??_ISR:
   203  000001                     
   204                           ; 1 bytes @ 0x0
   205  000001                     	ds	17
   206  000012                     ISR@j:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x11
   210  000012                     	ds	2
   211  000014                     ISR@i:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x13
   215  000014                     	ds	2
   216  000016                     ISR@j_978:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x15
   220  000016                     	ds	2
   221  000018                     putch@c:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x17
   225  000018                     	ds	1
   226  000019                     ?_printf:
   227                           	opt stack 0
   228  000019                     printf@f:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x18
   232  000019                     	ds	4
   233  00001D                     printf@flag:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x1C
   237  00001D                     	ds	1
   238  00001E                     printf@ap:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x1D
   242  00001E                     	ds	2
   243  000020                     printf@c:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x1F
   247  000020                     	ds	1
   248  000021                     tblptru	equ	0xFF8
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           ; 1 bytes @ 0x20
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 96 in file "bitbang.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels required when called:    3
   278 ;; This function calls:
   279 ;;		_INIT_PIC
   280 ;;		_printf
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287  001068                     __ptext0:
   288                           	opt stack 0
   289  001068                     _main:
   290                           	opt stack 28
   291                           
   292                           ;bitbang.c: 98: INIT_PIC();
   293                           
   294                           ;incstack = 0
   295  001068  ECD2  F008         	call	_INIT_PIC	;wreg free
   296                           
   297                           ;bitbang.c: 100: pwm_channel[0] = PORTAbits.RA0;
   298  00106C  0E00               	movlw	0
   299  00106E  B080               	btfsc	3968,0,c	;volatile
   300  001070  0E01               	movlw	1
   301  001072  6E25               	movwf	_pwm_channel,c
   302                           
   303                           ;bitbang.c: 101: pwm_channel[1] = PORTAbits.RA1;
   304  001074  0E00               	movlw	0
   305  001076  B280               	btfsc	3968,1,c	;volatile
   306  001078  0E01               	movlw	1
   307  00107A  6E26               	movwf	_pwm_channel+1,c
   308                           
   309                           ;bitbang.c: 102: pwm_channel[2] = PORTAbits.RA2;
   310  00107C  0E00               	movlw	0
   311  00107E  B480               	btfsc	3968,2,c	;volatile
   312  001080  0E01               	movlw	1
   313  001082  6E27               	movwf	_pwm_channel+2,c
   314                           
   315                           ;bitbang.c: 103: pwm_channel[3] = PORTAbits.RA3;
   316  001084  0E00               	movlw	0
   317  001086  B680               	btfsc	3968,3,c	;volatile
   318  001088  0E01               	movlw	1
   319  00108A  6E28               	movwf	_pwm_channel+3,c
   320                           
   321                           ;bitbang.c: 105: duty_cycle[0] = 0;
   322  00108C  0E00               	movlw	0
   323  00108E  6E21               	movwf	_duty_cycle,c
   324                           
   325                           ;bitbang.c: 106: duty_cycle[1] = 45;
   326  001090  0E2D               	movlw	45
   327  001092  6E22               	movwf	_duty_cycle+1,c
   328                           
   329                           ;bitbang.c: 107: duty_cycle[2] = 90;
   330  001094  0E5A               	movlw	90
   331  001096  6E23               	movwf	_duty_cycle+2,c
   332                           
   333                           ;bitbang.c: 108: duty_cycle[3] = 180;
   334  001098  0EB4               	movlw	180
   335  00109A  6E24               	movwf	_duty_cycle+3,c
   336  00109C                     l922:
   337                           
   338                           ;bitbang.c: 112: if (PIR3bits.RC2IF) {
   339  00109C  AAA4               	btfss	4004,5,c	;volatile
   340  00109E  D7FE               	goto	l922
   341                           
   342                           ;bitbang.c: 113: PIR3bits.RC2IF = 0;
   343  0010A0  9AA4               	bcf	4004,5,c	;volatile
   344                           
   345                           ;bitbang.c: 115: switch (RCREG2) {
   346  0010A2  D032               	goto	l938
   347  0010A4                     l926:
   348                           
   349                           ;bitbang.c: 121: printf("\r\n");
   350  0010A4  0E1E               	movlw	low (STR_2+29)
   351  0010A6  6E19               	movwf	printf@f,c
   352  0010A8  0E10               	movlw	high (STR_2+29)
   353  0010AA  6E1A               	movwf	printf@f+1,c
   354  0010AC  EC96  F008         	call	_printf	;wreg free
   355                           
   356                           ;bitbang.c: 122: printf("-------------HELP------------\r\n");
   357  0010B0  0E01               	movlw	low STR_2
   358  0010B2  6E19               	movwf	printf@f,c
   359  0010B4  0E10               	movlw	high STR_2
   360  0010B6  6E1A               	movwf	printf@f+1,c
   361  0010B8  EC96  F008         	call	_printf	;wreg free
   362                           
   363                           ;bitbang.c: 123: printf("?: help menu\r\n");
   364  0010BC  0E45               	movlw	low STR_3
   365  0010BE  6E19               	movwf	printf@f,c
   366  0010C0  0E10               	movlw	high STR_3
   367  0010C2  6E1A               	movwf	printf@f+1,c
   368  0010C4  EC96  F008         	call	_printf	;wreg free
   369                           
   370                           ;bitbang.c: 124: printf("o: k\r\n");
   371  0010C8  0E5C               	movlw	low STR_4
   372  0010CA  6E19               	movwf	printf@f,c
   373  0010CC  0E10               	movlw	high STR_4
   374  0010CE  6E1A               	movwf	printf@f+1,c
   375  0010D0  EC96  F008         	call	_printf	;wreg free
   376                           
   377                           ;bitbang.c: 125: break;
   378  0010D4  D024               	goto	l940
   379  0010D6                     l928:
   380                           
   381                           ;bitbang.c: 131: printf("o:	ok\r\n");
   382  0010D6  0E54               	movlw	low STR_5
   383  0010D8  6E19               	movwf	printf@f,c
   384  0010DA  0E10               	movlw	high STR_5
   385  0010DC  6E1A               	movwf	printf@f+1,c
   386  0010DE  EC96  F008         	call	_printf	;wreg free
   387                           
   388                           ;bitbang.c: 132: break;
   389  0010E2  D01D               	goto	l940
   390  0010E4                     l930:
   391                           
   392                           ;bitbang.c: 138: printf("light should be on");
   393  0010E4  0E21               	movlw	low STR_6
   394  0010E6  6E19               	movwf	printf@f,c
   395  0010E8  0E10               	movlw	high STR_6
   396  0010EA  6E1A               	movwf	printf@f+1,c
   397  0010EC  EC96  F008         	call	_printf	;wreg free
   398                           
   399                           ;bitbang.c: 139: LATCbits.LATC1 ^= 1;
   400  0010F0  728B               	btg	3979,1,c	;volatile
   401                           
   402                           ;bitbang.c: 140: break;
   403  0010F2  D015               	goto	l940
   404  0010F4                     l934:
   405                           
   406                           ;bitbang.c: 145: printf("Unknown key %c\r\n",RCREG2);
   407  0010F4  0E34               	movlw	low STR_7
   408  0010F6  6E19               	movwf	printf@f,c
   409  0010F8  0E10               	movlw	high STR_7
   410  0010FA  6E1A               	movwf	printf@f+1,c
   411  0010FC  CF74 F01B          	movff	3956,?_printf+2	;volatile
   412  001100  6A1C               	clrf	?_printf+3,c
   413  001102  EC96  F008         	call	_printf	;wreg free
   414                           
   415                           ;bitbang.c: 148: }
   416                           
   417                           ;bitbang.c: 146: break;
   418  001106  D00B               	goto	l940
   419  001108                     l938:
   420  001108  5074               	movf	3956,w,c	;volatile
   421                           
   422                           ; Switch size 1, requested type "space"
   423                           ; Number of cases is 3, Range of values is 63 to 111
   424                           ; switch strategies available:
   425                           ; Name         Instructions Cycles
   426                           ; simple_byte           10     6 (average)
   427                           ;	Chosen strategy is simple_byte
   428  00110A  0A3F               	xorlw	63	; case 63
   429  00110C  B4D8               	btfsc	status,2,c
   430  00110E  D7CA               	goto	l926
   431  001110  0A56               	xorlw	86	; case 105
   432  001112  B4D8               	btfsc	status,2,c
   433  001114  D7E7               	goto	l930
   434  001116  0A06               	xorlw	6	; case 111
   435  001118  B4D8               	btfsc	status,2,c
   436  00111A  D7DD               	goto	l928
   437  00111C  D7EB               	goto	l934
   438  00111E                     l940:
   439                           
   440                           ;bitbang.c: 149: printf("> ");
   441  00111E  0E63               	movlw	low STR_8
   442  001120  6E19               	movwf	printf@f,c
   443  001122  0E10               	movlw	high STR_8
   444  001124  6E1A               	movwf	printf@f+1,c
   445  001126  EC96  F008         	call	_printf	;wreg free
   446  00112A  D7B8               	goto	l922
   447  00112C                     __end_of_main:
   448                           	opt stack 0
   449                           tblptru	equ	0xFF8
   450                           postinc0	equ	0xFEE
   451                           wreg	equ	0xFE8
   452                           status	equ	0xFD8
   453                           
   454 ;; *************** function _printf *****************
   455 ;; Defined at:
   456 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;  f               2   24[COMRAM] PTR const unsigned char 
   459 ;;		 -> STR_8(3), STR_7(17), STR_6(19), STR_5(8), 
   460 ;;		 -> STR_4(7), STR_3(15), STR_2(32), STR_1(3), 
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  tmpval          4    0        struct .
   463 ;;  cp              3    0        PTR const unsigned char 
   464 ;;  ap              2   29[COMRAM] PTR void [1]
   465 ;;		 -> ?_printf(2), 
   466 ;;  len             2    0        unsigned int 
   467 ;;  val             2    0        unsigned int 
   468 ;;  c               1   31[COMRAM] char 
   469 ;;  flag            1   28[COMRAM] unsigned char 
   470 ;;  prec            1    0        char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  2   24[COMRAM] int 
   473 ;; Registers used:
   474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;Total ram usage:        8 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    2
   487 ;; This function calls:
   488 ;;		_putch
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text1
   495  00112C                     __ptext1:
   496                           	opt stack 0
   497  00112C                     _printf:
   498                           	opt stack 28
   499                           
   500                           ;doprnt.c: 466: va_list ap;
   501                           ;doprnt.c: 499: signed char c;
   502                           ;doprnt.c: 506: signed char prec;
   503                           ;doprnt.c: 508: unsigned char flag;
   504                           ;doprnt.c: 523: union {
   505                           ;doprnt.c: 524: unsigned long vd;
   506                           ;doprnt.c: 525: double integ;
   507                           ;doprnt.c: 526: } tmpval;
   508                           ;doprnt.c: 528: unsigned int val;
   509                           ;doprnt.c: 529: unsigned len;
   510                           ;doprnt.c: 530: const char * cp;
   511                           ;doprnt.c: 533: *ap = __va_start();
   512                           
   513                           ;incstack = 0
   514  00112C  0E1B               	movlw	low (?_printf+2)
   515  00112E  6E1E               	movwf	printf@ap,c
   516  001130  0E00               	movlw	high (?_printf+2)
   517  001132  6E1F               	movwf	printf@ap+1,c
   518                           
   519                           ;doprnt.c: 536: while(c = *f++) {
   520  001134  D02A               	goto	l902
   521  001136                     l886:
   522                           
   523                           ;doprnt.c: 538: if(c != '%')
   524  001136  0E25               	movlw	37
   525  001138  1820               	xorwf	printf@c,w,c
   526  00113A  B4D8               	btfsc	status,2,c
   527  00113C  D004               	goto	l890
   528                           
   529                           ;doprnt.c: 540: {
   530                           ;doprnt.c: 541: (putch(c) );
   531  00113E  5020               	movf	printf@c,w,c
   532  001140  EC07  F009         	call	_putch
   533                           
   534                           ;doprnt.c: 542: continue;
   535  001144  D022               	goto	l902
   536  001146                     l890:
   537                           
   538                           ;doprnt.c: 543: }
   539                           ;doprnt.c: 548: flag = 0;
   540  001146  0E00               	movlw	0
   541  001148  6E1D               	movwf	printf@flag,c
   542                           
   543                           ;doprnt.c: 635: switch(c = *f++) {
   544  00114A  D00E               	goto	l900
   545  00114C                     l892:
   546                           
   547                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   548  00114C  C01E  FFD9         	movff	printf@ap,fsr2l
   549  001150  C01F  FFDA         	movff	printf@ap+1,fsr2h
   550  001154  50DF               	movf	indf2,w,c
   551  001156  6E20               	movwf	printf@c,c
   552  001158  0E02               	movlw	2
   553  00115A  261E               	addwf	printf@ap,f,c
   554  00115C  0E00               	movlw	0
   555  00115E  221F               	addwfc	printf@ap+1,f,c
   556  001160                     l896:
   557                           
   558                           ;doprnt.c: 809: (putch(c) );
   559  001160  5020               	movf	printf@c,w,c
   560  001162  EC07  F009         	call	_putch
   561                           
   562                           ;doprnt.c: 822: }
   563                           
   564                           ;doprnt.c: 810: continue;
   565  001166  D011               	goto	l902
   566  001168                     l900:
   567  001168  C019  FFF6         	movff	printf@f,tblptrl
   568  00116C  C01A  FFF7         	movff	printf@f+1,tblptrh
   569  001170  4A19               	infsnz	printf@f,f,c
   570  001172  2A1A               	incf	printf@f+1,f,c
   571  001174                     	if	0	;tblptru may be non-zero
   572  001174                     	endif
   573  001174                     	if	0	;tblptru may be non-zero
   574  001174                     	endif
   575  001174  0008               	tblrd		*
   576  001176  CFF5 F020          	movff	tablat,printf@c
   577  00117A  5020               	movf	printf@c,w,c
   578                           
   579                           ; Switch size 1, requested type "space"
   580                           ; Number of cases is 2, Range of values is 0 to 99
   581                           ; switch strategies available:
   582                           ; Name         Instructions Cycles
   583                           ; simple_byte            7     4 (average)
   584                           ;	Chosen strategy is simple_byte
   585  00117C  0A00               	xorlw	0	; case 0
   586  00117E  B4D8               	btfsc	status,2,c
   587  001180  0012               	return	
   588  001182  0A63               	xorlw	99	; case 99
   589  001184  B4D8               	btfsc	status,2,c
   590  001186  D7E2               	goto	l892
   591  001188  D7EB               	goto	l896
   592  00118A                     l902:
   593  00118A  C019  FFF6         	movff	printf@f,tblptrl
   594  00118E  C01A  FFF7         	movff	printf@f+1,tblptrh
   595  001192  4A19               	infsnz	printf@f,f,c
   596  001194  2A1A               	incf	printf@f+1,f,c
   597  001196                     	if	0	;tblptru may be non-zero
   598  001196                     	endif
   599  001196                     	if	0	;tblptru may be non-zero
   600  001196                     	endif
   601  001196  0008               	tblrd		*
   602  001198  CFF5 F020          	movff	tablat,printf@c
   603  00119C  5020               	movf	printf@c,w,c
   604  00119E  B4D8               	btfsc	status,2,c
   605  0011A0  0012               	return	
   606  0011A2  D7C9               	goto	l886
   607  0011A4                     __end_of_printf:
   608                           	opt stack 0
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           indf2	equ	0xFDF
   616                           fsr2h	equ	0xFDA
   617                           fsr2l	equ	0xFD9
   618                           status	equ	0xFD8
   619                           
   620 ;; *************** function _putch *****************
   621 ;; Defined at:
   622 ;;		line 251 in file "bitbang.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  c               1    wreg     unsigned char 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  c               1   23[COMRAM] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;Total ram usage:        1 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_printf
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text2
   651  00120E                     __ptext2:
   652                           	opt stack 0
   653  00120E                     _putch:
   654                           	opt stack 28
   655                           
   656                           ;incstack = 0
   657                           ;putch@c stored from wreg
   658  00120E  6E18               	movwf	putch@c,c
   659  001210                     l90:
   660  001210  A8A4               	btfss	4004,4,c	;volatile
   661  001212  D7FE               	goto	l90
   662                           
   663                           ;bitbang.c: 255: TX2REG = c;
   664  001214  C018  FF73         	movff	putch@c,3955	;volatile
   665  001218  0012               	return		;funcret
   666  00121A                     __end_of_putch:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           indf2	equ	0xFDF
   675                           fsr2h	equ	0xFDA
   676                           fsr2l	equ	0xFD9
   677                           status	equ	0xFD8
   678                           
   679 ;; *************** function _INIT_PIC *****************
   680 ;; Defined at:
   681 ;;		line 157 in file "bitbang.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text3
   710  0011A4                     __ptext3:
   711                           	opt stack 0
   712  0011A4                     _INIT_PIC:
   713                           	opt stack 29
   714                           
   715                           ;bitbang.c: 159: OSCCONbits.IRCF2 = 1;
   716                           
   717                           ;incstack = 0
   718  0011A4  8CD3               	bsf	4051,6,c	;volatile
   719                           
   720                           ;bitbang.c: 160: OSCCONbits.IRCF1 = 1;
   721  0011A6  8AD3               	bsf	4051,5,c	;volatile
   722                           
   723                           ;bitbang.c: 161: OSCCONbits.IRCF0 = 1;
   724  0011A8  88D3               	bsf	4051,4,c	;volatile
   725                           
   726                           ;bitbang.c: 162: OSCTUNEbits.PLLEN = 1;
   727  0011AA  8C9B               	bsf	3995,6,c	;volatile
   728                           
   729                           ;bitbang.c: 168: TXSTA2bits.TXEN = 1;
   730  0011AC  8A72               	bsf	3954,5,c	;volatile
   731                           
   732                           ;bitbang.c: 169: TXSTA2bits.SYNC = 0;
   733  0011AE  9872               	bcf	3954,4,c	;volatile
   734                           
   735                           ;bitbang.c: 170: TXSTA2bits.BRGH = 0;
   736  0011B0  9472               	bcf	3954,2,c	;volatile
   737                           
   738                           ;bitbang.c: 171: BAUDCON2bits.BRG16 = 0;
   739  0011B2  9670               	bcf	3952,3,c	;volatile
   740                           
   741                           ;bitbang.c: 172: RCSTA2bits.CREN = 1;
   742  0011B4  8871               	bsf	3953,4,c	;volatile
   743                           
   744                           ;bitbang.c: 173: SPBRG2 = 104;
   745  0011B6  0E68               	movlw	104
   746  0011B8  6E75               	movwf	3957,c	;volatile
   747                           
   748                           ;bitbang.c: 174: RCSTA2bits.SPEN = 1;
   749  0011BA  8E71               	bsf	3953,7,c	;volatile
   750                           
   751                           ;bitbang.c: 177: TRISCbits.TRISC1 = 0;
   752  0011BC  9294               	bcf	3988,1,c	;volatile
   753                           
   754                           ;bitbang.c: 178: TRISAbits.TRISA1 = 0;
   755  0011BE  9292               	bcf	3986,1,c	;volatile
   756                           
   757                           ;bitbang.c: 179: TRISAbits.TRISA2 = 0;
   758  0011C0  9492               	bcf	3986,2,c	;volatile
   759                           
   760                           ;bitbang.c: 180: TRISAbits.TRISA3 = 0;
   761  0011C2  9692               	bcf	3986,3,c	;volatile
   762                           
   763                           ;bitbang.c: 181: TRISAbits.TRISA4 = 0;
   764  0011C4  9892               	bcf	3986,4,c	;volatile
   765                           
   766                           ;bitbang.c: 184: T0CON = 0;
   767  0011C6  0E00               	movlw	0
   768  0011C8  6ED5               	movwf	4053,c	;volatile
   769                           
   770                           ;bitbang.c: 185: TMR0L = 0;
   771  0011CA  0E00               	movlw	0
   772  0011CC  6ED6               	movwf	4054,c	;volatile
   773                           
   774                           ;bitbang.c: 186: T0CONbits.PSA = 0;
   775  0011CE  96D5               	bcf	4053,3,c	;volatile
   776                           
   777                           ;bitbang.c: 187: T0CONbits.T0PS2 = 0;
   778  0011D0  94D5               	bcf	4053,2,c	;volatile
   779                           
   780                           ;bitbang.c: 188: T0CONbits.T0PS1 = 1;
   781  0011D2  82D5               	bsf	4053,1,c	;volatile
   782                           
   783                           ;bitbang.c: 189: T0CONbits.T0PS0 = 0;
   784  0011D4  90D5               	bcf	4053,0,c	;volatile
   785                           
   786                           ;bitbang.c: 190: T0CONbits.T08BIT = 0;
   787  0011D6  9CD5               	bcf	4053,6,c	;volatile
   788                           
   789                           ;bitbang.c: 191: T0CONbits.TMR0ON = 1;
   790  0011D8  8ED5               	bsf	4053,7,c	;volatile
   791                           
   792                           ;bitbang.c: 192: TMR0 = 31536;
   793  0011DA  0E7B               	movlw	123
   794  0011DC  6ED7               	movwf	4055,c	;volatile
   795  0011DE  0E30               	movlw	48
   796  0011E0  6ED6               	movwf	4054,c	;volatile
   797                           
   798                           ;bitbang.c: 194: T1CONbits.TMR1ON = 0;
   799  0011E2  90CD               	bcf	4045,0,c	;volatile
   800                           
   801                           ;bitbang.c: 195: T1CONbits.T1CKPS0 = 1;
   802  0011E4  88CD               	bsf	4045,4,c	;volatile
   803                           
   804                           ;bitbang.c: 196: T1CONbits.T1CKPS1 = 1;
   805  0011E6  8ACD               	bsf	4045,5,c	;volatile
   806                           
   807                           ;bitbang.c: 197: PIE1bits.TMR1IE = 0;
   808  0011E8  909D               	bcf	3997,0,c	;volatile
   809                           
   810                           ;bitbang.c: 198: T1CONbits.TMR1ON = 1;
   811  0011EA  80CD               	bsf	4045,0,c	;volatile
   812                           
   813                           ;bitbang.c: 201: INTCONbits.TMR0IF = 0;
   814  0011EC  94F2               	bcf	intcon,2,c	;volatile
   815                           
   816                           ;bitbang.c: 202: INTCONbits.TMR0IE = 1;
   817  0011EE  8AF2               	bsf	intcon,5,c	;volatile
   818                           
   819                           ;bitbang.c: 204: INTCONbits.GIE = 1;
   820  0011F0  8EF2               	bsf	intcon,7,c	;volatile
   821  0011F2  0012               	return		;funcret
   822  0011F4                     __end_of_INIT_PIC:
   823                           	opt stack 0
   824                           tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           intcon	equ	0xFF2
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           indf2	equ	0xFDF
   832                           fsr2h	equ	0xFDA
   833                           fsr2l	equ	0xFD9
   834                           status	equ	0xFD8
   835                           
   836 ;; *************** function _ISR *****************
   837 ;; Defined at:
   838 ;;		line 212 in file "bitbang.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  j               2   21[COMRAM] int 
   843 ;;  i               2   19[COMRAM] int 
   844 ;;  j               2   17[COMRAM] int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;Total ram usage:       23 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		Interrupt level 2
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	intcode
   868  000008                     __pintcode:
   869                           	opt stack 0
   870  000008                     _ISR:
   871                           	opt stack 28
   872                           
   873                           ;incstack = 0
   874  000008  8229               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   875  00000A  CFFA F004          	movff	pclath,??_ISR+3
   876  00000E  CFFB F005          	movff	pclatu,??_ISR+4
   877  000012  CFE9 F006          	movff	fsr0l,??_ISR+5
   878  000016  CFEA F007          	movff	fsr0h,??_ISR+6
   879  00001A  CFE1 F008          	movff	fsr1l,??_ISR+7
   880  00001E  CFE2 F009          	movff	fsr1h,??_ISR+8
   881  000022  CFD9 F00A          	movff	fsr2l,??_ISR+9
   882  000026  CFDA F00B          	movff	fsr2h,??_ISR+10
   883  00002A  CFF3 F00C          	movff	prodl,??_ISR+11
   884  00002E  CFF4 F00D          	movff	prodh,??_ISR+12
   885  000032  CFF6 F00E          	movff	tblptrl,??_ISR+13
   886  000036  CFF7 F00F          	movff	tblptrh,??_ISR+14
   887  00003A  CFF8 F010          	movff	tblptru,??_ISR+15
   888  00003E  CFF5 F011          	movff	tablat,??_ISR+16
   889                           
   890                           ;bitbang.c: 214: INTCONbits.TMR0IF =0;
   891  000042  94F2               	bcf	intcon,2,c	;volatile
   892                           
   893                           ;bitbang.c: 215: LATCbits.LATC1 ^= 1;
   894  000044  728B               	btg	3979,1,c	;volatile
   895                           
   896                           ;bitbang.c: 216: for (int j = 0; j < 4; j++) {
   897  000046  0E00               	movlw	0
   898  000048  6E13               	movwf	ISR@j+1,c
   899  00004A  0E00               	movlw	0
   900  00004C  6E12               	movwf	ISR@j,c
   901  00004E                     i2l838:
   902  00004E  BE13               	btfsc	ISR@j+1,7,c
   903  000050  D006               	goto	i2l842
   904  000052  5013               	movf	ISR@j+1,w,c
   905  000054  E10F               	bnz	i2l848
   906  000056  0E04               	movlw	4
   907  000058  5C12               	subwf	ISR@j,w,c
   908  00005A  B0D8               	btfsc	status,0,c
   909  00005C  D00B               	goto	i2l848
   910  00005E                     i2l842:
   911                           
   912                           ;bitbang.c: 217: pwm_channel[j] = 1;
   913  00005E  0E25               	movlw	low _pwm_channel
   914  000060  2412               	addwf	ISR@j,w,c
   915  000062  6ED9               	movwf	fsr2l,c
   916  000064  0E00               	movlw	high _pwm_channel
   917  000066  2013               	addwfc	ISR@j+1,w,c
   918  000068  6EDA               	movwf	fsr2h,c
   919  00006A  0E01               	movlw	1
   920  00006C  6EDF               	movwf	indf2,c
   921  00006E  4A12               	infsnz	ISR@j,f,c
   922  000070  2A13               	incf	ISR@j+1,f,c
   923  000072  D7ED               	goto	i2l838
   924  000074                     i2l848:
   925                           
   926                           ;bitbang.c: 218: }
   927                           ;bitbang.c: 221: TMR1 = 63536;
   928  000074  0EF8               	movlw	248
   929  000076  6ECF               	movwf	4047,c	;volatile
   930  000078  0E30               	movlw	48
   931  00007A  6ECE               	movwf	4046,c	;volatile
   932  00007C                     i2l75:
   933  00007C  A09E               	btfss	3998,0,c	;volatile
   934  00007E  D7FE               	goto	i2l75
   935                           
   936                           ;bitbang.c: 224: PIR1bits.TMR1IF = 0;
   937  000080  909E               	bcf	3998,0,c	;volatile
   938                           
   939                           ;bitbang.c: 227: for (int i = 0; i < 180; i++) {
   940  000082  0E00               	movlw	0
   941  000084  6E15               	movwf	ISR@i+1,c
   942  000086  0E00               	movlw	0
   943  000088  6E14               	movwf	ISR@i,c
   944  00008A                     i2l852:
   945  00008A  BE15               	btfsc	ISR@i+1,7,c
   946  00008C  D006               	goto	i2l856
   947  00008E  5015               	movf	ISR@i+1,w,c
   948  000090  E141               	bnz	i2l880
   949  000092  0EB4               	movlw	180
   950  000094  5C14               	subwf	ISR@i,w,c
   951  000096  B0D8               	btfsc	status,0,c
   952  000098  D03D               	goto	i2l880
   953  00009A                     i2l856:
   954                           
   955                           ;bitbang.c: 228: for (int j = 0; j < 4; j++) {
   956  00009A  0E00               	movlw	0
   957  00009C  6E17               	movwf	ISR@j_978+1,c
   958  00009E  0E00               	movlw	0
   959  0000A0  6E16               	movwf	ISR@j_978,c
   960  0000A2                     i2l858:
   961  0000A2  BE17               	btfsc	ISR@j_978+1,7,c
   962  0000A4  D006               	goto	i2l862
   963  0000A6  5017               	movf	ISR@j_978+1,w,c
   964  0000A8  E12B               	bnz	i2l874
   965  0000AA  0E04               	movlw	4
   966  0000AC  5C16               	subwf	ISR@j_978,w,c
   967  0000AE  B0D8               	btfsc	status,0,c
   968  0000B0  D027               	goto	i2l874
   969  0000B2                     i2l862:
   970                           
   971                           ;bitbang.c: 229: if (duty_cycle[j] < i)
   972  0000B2  0E21               	movlw	low _duty_cycle
   973  0000B4  2416               	addwf	ISR@j_978,w,c
   974  0000B6  6ED9               	movwf	fsr2l,c
   975  0000B8  0E00               	movlw	high _duty_cycle
   976  0000BA  2017               	addwfc	ISR@j_978+1,w,c
   977  0000BC  6EDA               	movwf	fsr2h,c
   978  0000BE  50DF               	movf	indf2,w,c
   979  0000C0  6E01               	movwf	??_ISR& (0+255),c
   980  0000C2  6A02               	clrf	(??_ISR+1)& (0+255),c
   981  0000C4  5014               	movf	ISR@i,w,c
   982  0000C6  5C01               	subwf	??_ISR,w,c
   983  0000C8  5002               	movf	??_ISR+1,w,c
   984  0000CA  0A80               	xorlw	128
   985  0000CC  6E03               	movwf	(??_ISR+2)& (0+255),c
   986  0000CE  5015               	movf	ISR@i+1,w,c
   987  0000D0  0A80               	xorlw	128
   988  0000D2  5803               	subwfb	(??_ISR+2)& (0+255),w,c
   989  0000D4  B0D8               	btfsc	status,0,c
   990  0000D6  D008               	goto	i2l866
   991                           
   992                           ;bitbang.c: 230: pwm_channel[j] = 0;
   993  0000D8  0E25               	movlw	low _pwm_channel
   994  0000DA  2416               	addwf	ISR@j_978,w,c
   995  0000DC  6ED9               	movwf	fsr2l,c
   996  0000DE  0E00               	movlw	high _pwm_channel
   997  0000E0  2017               	addwfc	ISR@j_978+1,w,c
   998  0000E2  6EDA               	movwf	fsr2h,c
   999  0000E4  0E00               	movlw	0
  1000  0000E6  D007               	goto	L1
  1001  0000E8                     i2l866:
  1002                           
  1003                           ;bitbang.c: 232: else pwm_channel[j] = 1;
  1004  0000E8  0E25               	movlw	low _pwm_channel
  1005  0000EA  2416               	addwf	ISR@j_978,w,c
  1006  0000EC  6ED9               	movwf	fsr2l,c
  1007  0000EE  0E00               	movlw	high _pwm_channel
  1008  0000F0  2017               	addwfc	ISR@j_978+1,w,c
  1009  0000F2  6EDA               	movwf	fsr2h,c
  1010  0000F4  0E01               	movlw	1
  1011  0000F6                     L1:
  1012  0000F6  6EDF               	movwf	indf2,c
  1013                           
  1014                           ;bitbang.c: 234: PIR1bits.TMR1IF = 0;
  1015  0000F8  909E               	bcf	3998,0,c	;volatile
  1016  0000FA  4A16               	infsnz	ISR@j_978,f,c
  1017  0000FC  2A17               	incf	ISR@j_978+1,f,c
  1018  0000FE  D7D1               	goto	i2l858
  1019  000100                     i2l874:
  1020                           
  1021                           ;bitbang.c: 235: }
  1022                           ;bitbang.c: 237: TMR1 = 65525;
  1023  000100  0EFF               	movlw	255
  1024  000102  6ECF               	movwf	4047,c	;volatile
  1025  000104  0EF5               	movlw	245
  1026  000106  6ECE               	movwf	4046,c	;volatile
  1027  000108                     i2l84:
  1028  000108  A09E               	btfss	3998,0,c	;volatile
  1029  00010A  D7FE               	goto	i2l84
  1030                           
  1031                           ;bitbang.c: 239: PIR1bits.TMR1IF = 0;
  1032  00010C  909E               	bcf	3998,0,c	;volatile
  1033  00010E  4A14               	infsnz	ISR@i,f,c
  1034  000110  2A15               	incf	ISR@i+1,f,c
  1035  000112  D7BB               	goto	i2l852
  1036  000114                     i2l880:
  1037                           
  1038                           ;bitbang.c: 240: }
  1039                           ;bitbang.c: 242: LATCbits.LATC1 ^= 1;
  1040  000114  728B               	btg	3979,1,c	;volatile
  1041                           
  1042                           ;bitbang.c: 243: TMR0 = 31536;
  1043  000116  0E7B               	movlw	123
  1044  000118  6ED7               	movwf	4055,c	;volatile
  1045  00011A  0E30               	movlw	48
  1046  00011C  6ED6               	movwf	4054,c	;volatile
  1047  00011E  C011  FFF5         	movff	??_ISR+16,tablat
  1048  000122  C010  FFF8         	movff	??_ISR+15,tblptru
  1049  000126  C00F  FFF7         	movff	??_ISR+14,tblptrh
  1050  00012A  C00E  FFF6         	movff	??_ISR+13,tblptrl
  1051  00012E  C00D  FFF4         	movff	??_ISR+12,prodh
  1052  000132  C00C  FFF3         	movff	??_ISR+11,prodl
  1053  000136  C00B  FFDA         	movff	??_ISR+10,fsr2h
  1054  00013A  C00A  FFD9         	movff	??_ISR+9,fsr2l
  1055  00013E  C009  FFE2         	movff	??_ISR+8,fsr1h
  1056  000142  C008  FFE1         	movff	??_ISR+7,fsr1l
  1057  000146  C007  FFEA         	movff	??_ISR+6,fsr0h
  1058  00014A  C006  FFE9         	movff	??_ISR+5,fsr0l
  1059  00014E  C005  FFFB         	movff	??_ISR+4,pclatu
  1060  000152  C004  FFFA         	movff	??_ISR+3,pclath
  1061  000156  9229               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1062  000158  0011               	retfie		f
  1063  00015A                     __end_of_ISR:
  1064                           	opt stack 0
  1065                           pclatu	equ	0xFFB
  1066                           pclath	equ	0xFFA
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           prodh	equ	0xFF4
  1072                           prodl	equ	0xFF3
  1073                           intcon	equ	0xFF2
  1074                           postinc0	equ	0xFEE
  1075                           fsr0h	equ	0xFEA
  1076                           fsr0l	equ	0xFE9
  1077                           wreg	equ	0xFE8
  1078                           fsr1h	equ	0xFE2
  1079                           fsr1l	equ	0xFE1
  1080                           indf2	equ	0xFDF
  1081                           fsr2h	equ	0xFDA
  1082                           fsr2l	equ	0xFD9
  1083                           status	equ	0xFD8
  1084                           pclatu	equ	0xFFB
  1085                           pclath	equ	0xFFA
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           prodh	equ	0xFF4
  1091                           prodl	equ	0xFF3
  1092                           intcon	equ	0xFF2
  1093                           postinc0	equ	0xFEE
  1094                           fsr0h	equ	0xFEA
  1095                           fsr0l	equ	0xFE9
  1096                           wreg	equ	0xFE8
  1097                           fsr1h	equ	0xFE2
  1098                           fsr1l	equ	0xFE1
  1099                           indf2	equ	0xFDF
  1100                           fsr2h	equ	0xFDA
  1101                           fsr2l	equ	0xFD9
  1102                           status	equ	0xFD8
  1103                           
  1104                           	psect	rparam
  1105  0000                     pclatu	equ	0xFFB
  1106                           pclath	equ	0xFFA
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           prodh	equ	0xFF4
  1112                           prodl	equ	0xFF3
  1113                           intcon	equ	0xFF2
  1114                           postinc0	equ	0xFEE
  1115                           fsr0h	equ	0xFEA
  1116                           fsr0l	equ	0xFE9
  1117                           wreg	equ	0xFE8
  1118                           fsr1h	equ	0xFE2
  1119                           fsr1l	equ	0xFE1
  1120                           indf2	equ	0xFDF
  1121                           fsr2h	equ	0xFDA
  1122                           fsr2l	equ	0xFD9
  1123                           status	equ	0xFD8
  1124                           
  1125                           	psect	temp
  1126  000029                     btemp:
  1127                           	opt stack 0
  1128  000029                     	ds	1
  1129  0000                     int$flags	set	btemp
  1130                           pclatu	equ	0xFFB
  1131                           pclath	equ	0xFFA
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           prodh	equ	0xFF4
  1137                           prodl	equ	0xFF3
  1138                           intcon	equ	0xFF2
  1139                           postinc0	equ	0xFEE
  1140                           fsr0h	equ	0xFEA
  1141                           fsr0l	equ	0xFE9
  1142                           wreg	equ	0xFE8
  1143                           fsr1h	equ	0xFE2
  1144                           fsr1l	equ	0xFE1
  1145                           indf2	equ	0xFDF
  1146                           fsr2h	equ	0xFDA
  1147                           fsr2l	equ	0xFD9
  1148                           status	equ	0xFD8


Data Sizes:
    Strings     101
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_8(CODE[3]), STR_7(CODE[17]), STR_6(CODE[19]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), STR_3(CODE[15]), STR_2(CODE[32]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     665
                           _INIT_PIC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     665
                                             24 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INIT_PIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 23    23      0     165
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_PIC
   _printf
     _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      28       1       42.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      12        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Apr 09 22:08:21 2016

                     l90 1210                      l900 1168                      l902 118A  
                    l930 10E4                      l922 109C                      l940 111E  
                    l934 10F4                      l926 10A4                      l928 10D6  
                    l890 1146                      l938 1108                      l892 114C  
                    l886 1136                      l896 1160                      _ISR 0008  
                    wreg 000FE8               _TXSTA2bits 000F72             __CFG_LVP$OFF 000000  
                   ?_ISR 0001                     ISR@i 0014                     ISR@j 0012  
                   STR_1 101E                     STR_2 1001                     STR_3 1045  
                   STR_4 105C                     STR_5 1054                     STR_6 1021  
                   STR_7 1034                     STR_8 1063            __CFG_DEBUG$ON 000000  
                   i2l75 007C                     i2l84 0108                     _TMR0 000FD6  
                   _TMR1 000FCE             __CFG_WDTPS$1 000000                     _main 1068  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 0029            __CFG_BORV$285 000000  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 015A            __CFG_IESO$OFF 000000             ___param_bank 000010  
                  ??_ISR 0001             _BAUDCON2bits 000F70         __end_of_INIT_PIC 11F4  
                  ?_main 0001                    _T0CON 000FD5                    i2l842 005E  
                  i2l852 008A                    i2l862 00B2                    i2l838 004E  
                  i2l880 0114                    i2l856 009A                    i2l848 0074  
                  i2l866 00E8                    i2l874 0100                    i2l858 00A2  
                  _TMR0L 000FD6                    _TX2IF 007D24           __CFG_FCMEN$OFF 000000  
     __CFG_MCLRE$EXTMCLR 000000                    _putch 120E           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 11F4  
           __end_of_main 112C                   ??_main 0021            __activetblptr 000002  
         __CFG_PLLCFG$ON 000000                   ?_putch 0001           __CFG_WDTEN$OFF 000000  
                 _RCREG2 000F74                   _SPBRG2 000F75                   _TX2REG 000F73  
         __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000                   clear_0 11FA  
                 _printf 112C             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0018  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 1200  
        __CFG_PBADEN$OFF 000000                ?_INIT_PIC 0001            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_putch 121A                  ??_putch 0018  
             ??_INIT_PIC 0018       __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000  
                ?_printf 0019        __CFG_PRICLKEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000             __psmallconst 1000          __CFG_STVREN$OFF 000000  
                __pcinit 11F4                  __ramtop 1000                  __ptext0 1068  
                __ptext1 112C                  __ptext2 120E                  __ptext3 11A4  
        __size_of_printf 0078                _T0CONbits 000FD5             __size_of_ISR 0152  
              _T1CONbits 000FCD               _duty_cycle 0021     end_of_initialization 1200  
          __Lmediumconst 0000                  printf@c 0020                  printf@f 0019  
                postinc0 000FEE                _PORTAbits 000F80                _TRISAbits 000F92  
              _TRISCbits 000F94        __size_of_INIT_PIC 0050           __end_of_printf 11A4  
    start_initialization 11F4              __end_of_ISR 015A                 ??_printf 001D  
            __pbssCOMRAM 0021                 ISR@j_978 0016                __pintcode 0008  
            __smallconst 1000           __size_of_putch 000C                 _LATCbits 000F8B  
               _INIT_PIC 11A4                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _PIR3bits 000FA4               printf@flag 001D                 __Hrparam 0000  
               __Lrparam 0000        __CFG_P2BMX$PORTC0 000000            __size_of_main 00C4  
               int$flags 0029              _OSCTUNEbits 000F9B               _INTCONbits 000FF2  
               intlevel2 0000               _RCSTA2bits 000F71               _OSCCONbits 000FD3  
               printf@ap 001E        __CFG_T3CMX$PORTC0 000000        __CFG_FOSC$INTIO67 000000  
            _pwm_channel 0025  
