

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Apr 10 11:47:47 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  001252                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _direction
    26  001252  66                 	db	102
    27                           
    28                           ;initializer for direction_routine@direction_state
    29  001253  01                 	db	1
    30  0000                     _TMR0	set	4054
    31  0000                     _TMR1	set	4046
    32  0000                     _BAUDCON2bits	set	3952
    33  0000                     _INTCONbits	set	4082
    34  0000                     _LATAbits	set	3977
    35  0000                     _LATCbits	set	3979
    36  0000                     _OSCCONbits	set	4051
    37  0000                     _OSCTUNEbits	set	3995
    38  0000                     _PIE1bits	set	3997
    39  0000                     _PIR1bits	set	3998
    40  0000                     _PIR3bits	set	4004
    41  0000                     _RCREG2	set	3956
    42  0000                     _RCSTA2bits	set	3953
    43  0000                     _SPBRG2	set	3957
    44  0000                     _T0CON	set	4053
    45  0000                     _T0CONbits	set	4053
    46  0000                     _T1CONbits	set	4045
    47  0000                     _TMR0L	set	4054
    48  0000                     _TRISAbits	set	3986
    49  0000                     _TRISCbits	set	3988
    50  0000                     _TX2REG	set	3955
    51  0000                     _TXSTA2bits	set	3954
    52  0000                     _TX2IF	set	32036
    53                           
    54                           	psect	smallconst
    55  001000                     __psmallconst:
    56                           	opt stack 0
    57  001000  00                 	db	0
    58  001001                     STR_2:
    59  001001  2D                 	db	45
    60  001002  2D                 	db	45
    61  001003  2D                 	db	45
    62  001004  2D                 	db	45
    63  001005  2D                 	db	45
    64  001006  2D                 	db	45
    65  001007  2D                 	db	45
    66  001008  2D                 	db	45
    67  001009  2D                 	db	45
    68  00100A  2D                 	db	45
    69  00100B  2D                 	db	45
    70  00100C  2D                 	db	45
    71  00100D  2D                 	db	45
    72  00100E  48                 	db	72	;'H'
    73  00100F  45                 	db	69	;'E'
    74  001010  4C                 	db	76	;'L'
    75  001011  50                 	db	80	;'P'
    76  001012  2D                 	db	45
    77  001013  2D                 	db	45
    78  001014  2D                 	db	45
    79  001015  2D                 	db	45
    80  001016  2D                 	db	45
    81  001017  2D                 	db	45
    82  001018  2D                 	db	45
    83  001019  2D                 	db	45
    84  00101A  2D                 	db	45
    85  00101B  2D                 	db	45
    86  00101C  2D                 	db	45
    87  00101D  2D                 	db	45
    88  00101E  0D                 	db	13
    89  00101F  0A                 	db	10
    90  001020  00                 	db	0
    91  001021                     STR_6:
    92  001021  6C                 	db	108	;'l'
    93  001022  69                 	db	105	;'i'
    94  001023  67                 	db	103	;'g'
    95  001024  68                 	db	104	;'h'
    96  001025  74                 	db	116	;'t'
    97  001026  20                 	db	32
    98  001027  73                 	db	115	;'s'
    99  001028  68                 	db	104	;'h'
   100  001029  6F                 	db	111	;'o'
   101  00102A  75                 	db	117	;'u'
   102  00102B  6C                 	db	108	;'l'
   103  00102C  64                 	db	100	;'d'
   104  00102D  20                 	db	32
   105  00102E  62                 	db	98	;'b'
   106  00102F  65                 	db	101	;'e'
   107  001030  20                 	db	32
   108  001031  6F                 	db	111	;'o'
   109  001032  6E                 	db	110	;'n'
   110  001033  00                 	db	0
   111  001034                     STR_7:
   112  001034  55                 	db	85	;'U'
   113  001035  6E                 	db	110	;'n'
   114  001036  6B                 	db	107	;'k'
   115  001037  6E                 	db	110	;'n'
   116  001038  6F                 	db	111	;'o'
   117  001039  77                 	db	119	;'w'
   118  00103A  6E                 	db	110	;'n'
   119  00103B  20                 	db	32
   120  00103C  6B                 	db	107	;'k'
   121  00103D  65                 	db	101	;'e'
   122  00103E  79                 	db	121	;'y'
   123  00103F  20                 	db	32
   124  001040  25                 	db	37
   125  001041  63                 	db	99	;'c'
   126  001042  0D                 	db	13
   127  001043  0A                 	db	10
   128  001044  00                 	db	0
   129  001045                     STR_3:
   130  001045  3F                 	db	63	;'?'
   131  001046  3A                 	db	58	;':'
   132  001047  20                 	db	32
   133  001048  68                 	db	104	;'h'
   134  001049  65                 	db	101	;'e'
   135  00104A  6C                 	db	108	;'l'
   136  00104B  70                 	db	112	;'p'
   137  00104C  20                 	db	32
   138  00104D  6D                 	db	109	;'m'
   139  00104E  65                 	db	101	;'e'
   140  00104F  6E                 	db	110	;'n'
   141  001050  75                 	db	117	;'u'
   142  001051  0D                 	db	13
   143  001052  0A                 	db	10
   144  001053  00                 	db	0
   145  001054                     STR_5:
   146  001054  6F                 	db	111	;'o'
   147  001055  3A                 	db	58	;':'
   148  001056  09                 	db	9
   149  001057  6F                 	db	111	;'o'
   150  001058  6B                 	db	107	;'k'
   151  001059  0D                 	db	13
   152  00105A  0A                 	db	10
   153  00105B  00                 	db	0
   154  00105C                     STR_4:
   155  00105C  6F                 	db	111	;'o'
   156  00105D  3A                 	db	58	;':'
   157  00105E  20                 	db	32
   158  00105F  6B                 	db	107	;'k'
   159  001060  0D                 	db	13
   160  001061  0A                 	db	10
   161  001062  00                 	db	0
   162  001063                     STR_8:
   163  001063  3E                 	db	62	;'>'
   164  001064  20                 	db	32
   165  001065  00                 	db	0
   166  0000                     
   167                           ; #config settings
   168  001066  00                 	db	0	; dummy byte at the end
   169  0000                     
   170                           	psect	cinit
   171  001214                     __pcinit:
   172                           	opt stack 0
   173  001214                     start_initialization:
   174                           	opt stack 0
   175  001214                     __initialization:
   176                           	opt stack 0
   177                           
   178                           ; Clear objects allocated to COMRAM (9 bytes)
   179  001214  EE00  F01D         	lfsr	0,__pbssCOMRAM
   180  001218  0E09               	movlw	9
   181  00121A                     clear_0:
   182  00121A  6AEE               	clrf	postinc0,c
   183  00121C  06E8               	decf	wreg,f,c
   184  00121E  E1FD               	bnz	clear_0
   185                           
   186                           ; Initialize objects allocated to COMRAM (2 bytes)
   187                           ; load TBLPTR registers with __pidataCOMRAM
   188  001220  0E52               	movlw	low __pidataCOMRAM
   189  001222  6EF6               	movwf	tblptrl,c
   190  001224  0E12               	movlw	high __pidataCOMRAM
   191  001226  6EF7               	movwf	tblptrh,c
   192  001228  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   193  00122A  6EF8               	movwf	tblptru,c
   194  00122C  0009               	tblrd		*+	;fetch initializer
   195  00122E  CFF5 F026          	movff	tablat,__pdataCOMRAM
   196  001232  0009               	tblrd		*+	;fetch initializer
   197  001234  CFF5 F027          	movff	tablat,__pdataCOMRAM+1
   198  001238                     end_of_initialization:
   199                           	opt stack 0
   200  001238                     __end_of__initialization:
   201                           	opt stack 0
   202  001238  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   203  00123A  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   204  00123C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   205  00123E  6EF8               	movwf	tblptru,c
   206  001240  0100               	movlb	0
   207  001242  EF34  F008         	goto	_main	;jump to C main() function
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	bssCOMRAM
   216  00001D                     __pbssCOMRAM:
   217                           	opt stack 0
   218  00001D                     _duty_cycle:
   219                           	opt stack 0
   220  00001D                     	ds	4
   221  000021                     _pwm_channel:
   222                           	opt stack 0
   223  000021                     	ds	4
   224  000025                     _counter:
   225                           	opt stack 0
   226  000025                     	ds	1
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	dataCOMRAM
   235  000026                     __pdataCOMRAM:
   236                           	opt stack 0
   237  000026                     _direction:
   238                           	opt stack 0
   239  000026                     	ds	1
   240  000027                     direction_routine@direction_state:
   241                           	opt stack 0
   242  000027                     	ds	1
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           
   250                           	psect	cstackCOMRAM
   251  000001                     __pcstackCOMRAM:
   252                           	opt stack 0
   253  000001                     ??_ISR:
   254  000001                     
   255                           ; 1 bytes @ 0x0
   256  000001                     	ds	17
   257  000012                     ISR@i:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x11
   261  000012                     	ds	2
   262  000014                     putch@c:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x13
   266  000014                     	ds	1
   267  000015                     ?_printf:
   268                           	opt stack 0
   269  000015                     printf@f:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x14
   273  000015                     	ds	4
   274  000019                     printf@flag:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x18
   278  000019                     	ds	1
   279  00001A                     printf@ap:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x19
   283  00001A                     	ds	2
   284  00001C                     printf@c:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x1B
   288  00001C                     	ds	1
   289  00001D                     tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           ; 1 bytes @ 0x1C
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 89 in file "bitbang.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels required when called:    3
   322 ;; This function calls:
   323 ;;		_INIT_PIC
   324 ;;		_direction_routine
   325 ;;		_printf
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text0
   332  001068                     __ptext0:
   333                           	opt stack 0
   334  001068                     _main:
   335                           	opt stack 28
   336                           
   337                           ;bitbang.c: 93: INIT_PIC();
   338                           
   339                           ;incstack = 0
   340  001068  ECC4  F008         	call	_INIT_PIC	;wreg free
   341                           
   342                           ;bitbang.c: 97: duty_cycle[0] = 45;
   343  00106C  0E2D               	movlw	45
   344  00106E  6E1D               	movwf	_duty_cycle,c
   345                           
   346                           ;bitbang.c: 98: duty_cycle[1] = 45;
   347  001070  0E2D               	movlw	45
   348  001072  6E1E               	movwf	_duty_cycle+1,c
   349                           
   350                           ;bitbang.c: 99: duty_cycle[2] = 45;
   351  001074  0E2D               	movlw	45
   352  001076  6E1F               	movwf	_duty_cycle+2,c
   353                           
   354                           ;bitbang.c: 100: duty_cycle[3] = 45;
   355  001078  0E2D               	movlw	45
   356  00107A  6E20               	movwf	_duty_cycle+3,c
   357  00107C                     l939:
   358                           
   359                           ;bitbang.c: 104: if (PIR3bits.RC2IF) {
   360  00107C  AAA4               	btfss	4004,5,c	;volatile
   361  00107E  D7FE               	goto	l939
   362                           
   363                           ;bitbang.c: 105: PIR3bits.RC2IF = 0;
   364  001080  9AA4               	bcf	4004,5,c	;volatile
   365                           
   366                           ;bitbang.c: 109: switch (RCREG2) {
   367  001082  D032               	goto	l955
   368  001084                     l943:
   369                           
   370                           ;bitbang.c: 114: printf("\r\n");
   371  001084  0E1E               	movlw	low (STR_2+29)
   372  001086  6E15               	movwf	printf@f,c
   373  001088  0E10               	movlw	high (STR_2+29)
   374  00108A  6E16               	movwf	printf@f+1,c
   375  00108C  EC88  F008         	call	_printf	;wreg free
   376                           
   377                           ;bitbang.c: 115: printf("-------------HELP------------\r\n");
   378  001090  0E01               	movlw	low STR_2
   379  001092  6E15               	movwf	printf@f,c
   380  001094  0E10               	movlw	high STR_2
   381  001096  6E16               	movwf	printf@f+1,c
   382  001098  EC88  F008         	call	_printf	;wreg free
   383                           
   384                           ;bitbang.c: 116: printf("?: help menu\r\n");
   385  00109C  0E45               	movlw	low STR_3
   386  00109E  6E15               	movwf	printf@f,c
   387  0010A0  0E10               	movlw	high STR_3
   388  0010A2  6E16               	movwf	printf@f+1,c
   389  0010A4  EC88  F008         	call	_printf	;wreg free
   390                           
   391                           ;bitbang.c: 117: printf("o: k\r\n");
   392  0010A8  0E5C               	movlw	low STR_4
   393  0010AA  6E15               	movwf	printf@f,c
   394  0010AC  0E10               	movlw	high STR_4
   395  0010AE  6E16               	movwf	printf@f+1,c
   396  0010B0  EC88  F008         	call	_printf	;wreg free
   397                           
   398                           ;bitbang.c: 118: break;
   399  0010B4  D024               	goto	l957
   400  0010B6                     l945:
   401                           
   402                           ;bitbang.c: 124: printf("o:	ok\r\n");
   403  0010B6  0E54               	movlw	low STR_5
   404  0010B8  6E15               	movwf	printf@f,c
   405  0010BA  0E10               	movlw	high STR_5
   406  0010BC  6E16               	movwf	printf@f+1,c
   407  0010BE  EC88  F008         	call	_printf	;wreg free
   408                           
   409                           ;bitbang.c: 125: break;
   410  0010C2  D01D               	goto	l957
   411  0010C4                     l947:
   412                           
   413                           ;bitbang.c: 131: printf("light should be on");
   414  0010C4  0E21               	movlw	low STR_6
   415  0010C6  6E15               	movwf	printf@f,c
   416  0010C8  0E10               	movlw	high STR_6
   417  0010CA  6E16               	movwf	printf@f+1,c
   418  0010CC  EC88  F008         	call	_printf	;wreg free
   419                           
   420                           ;bitbang.c: 132: LATCbits.LATC1 ^= 1;
   421  0010D0  728B               	btg	3979,1,c	;volatile
   422                           
   423                           ;bitbang.c: 133: break;
   424  0010D2  D015               	goto	l957
   425  0010D4                     l951:
   426                           
   427                           ;bitbang.c: 141: printf("Unknown key %c\r\n",RCREG2);
   428  0010D4  0E34               	movlw	low STR_7
   429  0010D6  6E15               	movwf	printf@f,c
   430  0010D8  0E10               	movlw	high STR_7
   431  0010DA  6E16               	movwf	printf@f+1,c
   432  0010DC  CF74 F017          	movff	3956,?_printf+2	;volatile
   433  0010E0  6A18               	clrf	?_printf+3,c
   434  0010E2  EC88  F008         	call	_printf	;wreg free
   435                           
   436                           ;bitbang.c: 144: }
   437                           
   438                           ;bitbang.c: 142: break;
   439  0010E6  D00B               	goto	l957
   440  0010E8                     l955:
   441  0010E8  5074               	movf	3956,w,c	;volatile
   442                           
   443                           ; Switch size 1, requested type "space"
   444                           ; Number of cases is 3, Range of values is 63 to 111
   445                           ; switch strategies available:
   446                           ; Name         Instructions Cycles
   447                           ; simple_byte           10     6 (average)
   448                           ;	Chosen strategy is simple_byte
   449  0010EA  0A3F               	xorlw	63	; case 63
   450  0010EC  B4D8               	btfsc	status,2,c
   451  0010EE  D7CA               	goto	l943
   452  0010F0  0A56               	xorlw	86	; case 105
   453  0010F2  B4D8               	btfsc	status,2,c
   454  0010F4  D7E7               	goto	l947
   455  0010F6  0A06               	xorlw	6	; case 111
   456  0010F8  B4D8               	btfsc	status,2,c
   457  0010FA  D7DD               	goto	l945
   458  0010FC  D7EB               	goto	l951
   459  0010FE                     l957:
   460                           
   461                           ;bitbang.c: 145: printf("> ");
   462  0010FE  0E63               	movlw	low STR_8
   463  001100  6E15               	movwf	printf@f,c
   464  001102  0E10               	movlw	high STR_8
   465  001104  6E16               	movwf	printf@f+1,c
   466  001106  EC88  F008         	call	_printf	;wreg free
   467                           
   468                           ;bitbang.c: 148: direction_routine();
   469  00110A  ECEC  F008         	call	_direction_routine	;wreg free
   470  00110E  D7B6               	goto	l939
   471  001110                     __end_of_main:
   472                           	opt stack 0
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           status	equ	0xFD8
   480                           
   481 ;; *************** function _printf *****************
   482 ;; Defined at:
   483 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  f               2   20[COMRAM] PTR const unsigned char 
   486 ;;		 -> STR_8(3), STR_7(17), STR_6(19), STR_5(8), 
   487 ;;		 -> STR_4(7), STR_3(15), STR_2(32), STR_1(3), 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  tmpval          4    0        struct .
   490 ;;  cp              3    0        PTR const unsigned char 
   491 ;;  ap              2   25[COMRAM] PTR void [1]
   492 ;;		 -> ?_printf(2), 
   493 ;;  len             2    0        unsigned int 
   494 ;;  val             2    0        unsigned int 
   495 ;;  c               1   27[COMRAM] char 
   496 ;;  flag            1   24[COMRAM] unsigned char 
   497 ;;  prec            1    0        char 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  2   20[COMRAM] int 
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        8 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; Hardware stack levels required when called:    2
   514 ;; This function calls:
   515 ;;		_putch
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text1
   522  001110                     __ptext1:
   523                           	opt stack 0
   524  001110                     _printf:
   525                           	opt stack 28
   526                           
   527                           ;doprnt.c: 466: va_list ap;
   528                           ;doprnt.c: 499: signed char c;
   529                           ;doprnt.c: 506: signed char prec;
   530                           ;doprnt.c: 508: unsigned char flag;
   531                           ;doprnt.c: 523: union {
   532                           ;doprnt.c: 524: unsigned long vd;
   533                           ;doprnt.c: 525: double integ;
   534                           ;doprnt.c: 526: } tmpval;
   535                           ;doprnt.c: 528: unsigned int val;
   536                           ;doprnt.c: 529: unsigned len;
   537                           ;doprnt.c: 530: const char * cp;
   538                           ;doprnt.c: 533: *ap = __va_start();
   539                           
   540                           ;incstack = 0
   541  001110  0E17               	movlw	low (?_printf+2)
   542  001112  6E1A               	movwf	printf@ap,c
   543  001114  0E00               	movlw	high (?_printf+2)
   544  001116  6E1B               	movwf	printf@ap+1,c
   545                           
   546                           ;doprnt.c: 536: while(c = *f++) {
   547  001118  D02A               	goto	l927
   548  00111A                     l911:
   549                           
   550                           ;doprnt.c: 538: if(c != '%')
   551  00111A  0E25               	movlw	37
   552  00111C  181C               	xorwf	printf@c,w,c
   553  00111E  B4D8               	btfsc	status,2,c
   554  001120  D004               	goto	l915
   555                           
   556                           ;doprnt.c: 540: {
   557                           ;doprnt.c: 541: (putch(c) );
   558  001122  501C               	movf	printf@c,w,c
   559  001124  EC23  F009         	call	_putch
   560                           
   561                           ;doprnt.c: 542: continue;
   562  001128  D022               	goto	l927
   563  00112A                     l915:
   564                           
   565                           ;doprnt.c: 543: }
   566                           ;doprnt.c: 548: flag = 0;
   567  00112A  0E00               	movlw	0
   568  00112C  6E19               	movwf	printf@flag,c
   569                           
   570                           ;doprnt.c: 635: switch(c = *f++) {
   571  00112E  D00E               	goto	l925
   572  001130                     l917:
   573                           
   574                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   575  001130  C01A  FFD9         	movff	printf@ap,fsr2l
   576  001134  C01B  FFDA         	movff	printf@ap+1,fsr2h
   577  001138  50DF               	movf	indf2,w,c
   578  00113A  6E1C               	movwf	printf@c,c
   579  00113C  0E02               	movlw	2
   580  00113E  261A               	addwf	printf@ap,f,c
   581  001140  0E00               	movlw	0
   582  001142  221B               	addwfc	printf@ap+1,f,c
   583  001144                     l921:
   584                           
   585                           ;doprnt.c: 809: (putch(c) );
   586  001144  501C               	movf	printf@c,w,c
   587  001146  EC23  F009         	call	_putch
   588                           
   589                           ;doprnt.c: 822: }
   590                           
   591                           ;doprnt.c: 810: continue;
   592  00114A  D011               	goto	l927
   593  00114C                     l925:
   594  00114C  C015  FFF6         	movff	printf@f,tblptrl
   595  001150  C016  FFF7         	movff	printf@f+1,tblptrh
   596  001154  4A15               	infsnz	printf@f,f,c
   597  001156  2A16               	incf	printf@f+1,f,c
   598  001158                     	if	0	;tblptru may be non-zero
   599  001158                     	endif
   600  001158                     	if	0	;tblptru may be non-zero
   601  001158                     	endif
   602  001158  0008               	tblrd		*
   603  00115A  CFF5 F01C          	movff	tablat,printf@c
   604  00115E  501C               	movf	printf@c,w,c
   605                           
   606                           ; Switch size 1, requested type "space"
   607                           ; Number of cases is 2, Range of values is 0 to 99
   608                           ; switch strategies available:
   609                           ; Name         Instructions Cycles
   610                           ; simple_byte            7     4 (average)
   611                           ;	Chosen strategy is simple_byte
   612  001160  0A00               	xorlw	0	; case 0
   613  001162  B4D8               	btfsc	status,2,c
   614  001164  0012               	return	
   615  001166  0A63               	xorlw	99	; case 99
   616  001168  B4D8               	btfsc	status,2,c
   617  00116A  D7E2               	goto	l917
   618  00116C  D7EB               	goto	l921
   619  00116E                     l927:
   620  00116E  C015  FFF6         	movff	printf@f,tblptrl
   621  001172  C016  FFF7         	movff	printf@f+1,tblptrh
   622  001176  4A15               	infsnz	printf@f,f,c
   623  001178  2A16               	incf	printf@f+1,f,c
   624  00117A                     	if	0	;tblptru may be non-zero
   625  00117A                     	endif
   626  00117A                     	if	0	;tblptru may be non-zero
   627  00117A                     	endif
   628  00117A  0008               	tblrd		*
   629  00117C  CFF5 F01C          	movff	tablat,printf@c
   630  001180  501C               	movf	printf@c,w,c
   631  001182  B4D8               	btfsc	status,2,c
   632  001184  0012               	return	
   633  001186  D7C9               	goto	l911
   634  001188                     __end_of_printf:
   635                           	opt stack 0
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           indf2	equ	0xFDF
   643                           fsr2h	equ	0xFDA
   644                           fsr2l	equ	0xFD9
   645                           status	equ	0xFD8
   646                           
   647 ;; *************** function _putch *****************
   648 ;; Defined at:
   649 ;;		line 271 in file "bitbang.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  c               1    wreg     unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  c               1   19[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        1 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_printf
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text2
   678  001246                     __ptext2:
   679                           	opt stack 0
   680  001246                     _putch:
   681                           	opt stack 28
   682                           
   683                           ;incstack = 0
   684                           ;putch@c stored from wreg
   685  001246  6E14               	movwf	putch@c,c
   686  001248                     l98:
   687  001248  A8A4               	btfss	4004,4,c	;volatile
   688  00124A  D7FE               	goto	l98
   689                           
   690                           ;bitbang.c: 275: TX2REG = c;
   691  00124C  C014  FF73         	movff	putch@c,3955	;volatile
   692  001250  0012               	return		;funcret
   693  001252                     __end_of_putch:
   694                           	opt stack 0
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           indf2	equ	0xFDF
   702                           fsr2h	equ	0xFDA
   703                           fsr2l	equ	0xFD9
   704                           status	equ	0xFD8
   705                           
   706 ;; *************** function _direction_routine *****************
   707 ;; Defined at:
   708 ;;		line 282 in file "bitbang.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text3
   737  0011D8                     __ptext3:
   738                           	opt stack 0
   739  0011D8                     _direction_routine:
   740                           	opt stack 29
   741                           
   742                           ;bitbang.c: 283: static int8 direction_state = 1;
   743                           ;bitbang.c: 284: switch (direction) {
   744                           
   745                           ;incstack = 0
   746  0011D8  D015               	goto	l827
   747  0011DA                     l817:
   748                           
   749                           ;bitbang.c: 291: if (direction_state = 0) {
   750  0011DA  0E00               	movlw	0
   751  0011DC  6E27               	movwf	direction_routine@direction_state,c
   752                           
   753                           ;bitbang.c: 297: duty_cycle[0] = 45;
   754                           
   755                           ;bitbang.c: 296: } else {
   756                           
   757                           ;bitbang.c: 295: duty_cycle[3] = 45;
   758                           
   759                           ;bitbang.c: 294: duty_cycle[2] = 180;
   760                           
   761                           ;bitbang.c: 293: duty_cycle[1] = 45;
   762                           
   763                           ;bitbang.c: 292: duty_cycle[0] = 180;
   764  0011DE  0E2D               	movlw	45
   765  0011E0  6E1D               	movwf	_duty_cycle,c
   766                           
   767                           ;bitbang.c: 298: duty_cycle[1] = 180;
   768  0011E2  0EB4               	movlw	180
   769  0011E4  6E1E               	movwf	_duty_cycle+1,c
   770                           
   771                           ;bitbang.c: 299: duty_cycle[2] = 45;
   772  0011E6  0E2D               	movlw	45
   773  0011E8  6E1F               	movwf	_duty_cycle+2,c
   774                           
   775                           ;bitbang.c: 300: duty_cycle[3] = 180;
   776  0011EA  0EB4               	movlw	180
   777  0011EC  6E20               	movwf	_duty_cycle+3,c
   778  0011EE                     l110:
   779                           
   780                           ;bitbang.c: 308: if (direction_state = 0) {
   781  0011EE  0E00               	movlw	0
   782  0011F0  6E27               	movwf	direction_routine@direction_state,c
   783                           
   784                           ;bitbang.c: 314: duty_cycle[0] = 45;
   785                           
   786                           ;bitbang.c: 313: } else {
   787                           
   788                           ;bitbang.c: 312: duty_cycle[3] = 45;
   789                           
   790                           ;bitbang.c: 311: duty_cycle[2] = 180;
   791                           
   792                           ;bitbang.c: 310: duty_cycle[1] = 45;
   793                           
   794                           ;bitbang.c: 309: duty_cycle[0] = 180;
   795  0011F2  0E2D               	movlw	45
   796  0011F4  6E1D               	movwf	_duty_cycle,c
   797                           
   798                           ;bitbang.c: 315: duty_cycle[1] = 180;
   799  0011F6  0EB4               	movlw	180
   800  0011F8  6E1E               	movwf	_duty_cycle+1,c
   801                           
   802                           ;bitbang.c: 316: duty_cycle[2] = 45;
   803  0011FA  0E2D               	movlw	45
   804  0011FC  6E1F               	movwf	_duty_cycle+2,c
   805                           
   806                           ;bitbang.c: 317: duty_cycle[3] = 180;
   807  0011FE  0EB4               	movlw	180
   808  001200  6E20               	movwf	_duty_cycle+3,c
   809                           
   810                           ;bitbang.c: 318: }
   811                           ;bitbang.c: 328: }
   812  001202  0012               	return	
   813  001204                     l827:
   814  001204  5026               	movf	_direction,w,c
   815                           
   816                           ; Switch size 1, requested type "space"
   817                           ; Number of cases is 2, Range of values is 102 to 114
   818                           ; switch strategies available:
   819                           ; Name         Instructions Cycles
   820                           ; simple_byte            7     4 (average)
   821                           ;	Chosen strategy is simple_byte
   822  001206  0A66               	xorlw	102	; case 102
   823  001208  B4D8               	btfsc	status,2,c
   824  00120A  D7E7               	goto	l817
   825  00120C  0A14               	xorlw	20	; case 114
   826  00120E  A4D8               	btfss	status,2,c
   827  001210  0012               	return	
   828  001212  D7ED               	goto	l110
   829  001214                     __end_of_direction_routine:
   830                           	opt stack 0
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           indf2	equ	0xFDF
   838                           fsr2h	equ	0xFDA
   839                           fsr2l	equ	0xFD9
   840                           status	equ	0xFD8
   841                           
   842 ;; *************** function _INIT_PIC *****************
   843 ;; Defined at:
   844 ;;		line 160 in file "bitbang.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text4
   873  001188                     __ptext4:
   874                           	opt stack 0
   875  001188                     _INIT_PIC:
   876                           	opt stack 29
   877                           
   878                           ;bitbang.c: 162: OSCCONbits.IRCF2 = 1;
   879                           
   880                           ;incstack = 0
   881  001188  8CD3               	bsf	4051,6,c	;volatile
   882                           
   883                           ;bitbang.c: 163: OSCCONbits.IRCF1 = 1;
   884  00118A  8AD3               	bsf	4051,5,c	;volatile
   885                           
   886                           ;bitbang.c: 164: OSCCONbits.IRCF0 = 1;
   887  00118C  88D3               	bsf	4051,4,c	;volatile
   888                           
   889                           ;bitbang.c: 165: OSCTUNEbits.PLLEN = 1;
   890  00118E  8C9B               	bsf	3995,6,c	;volatile
   891                           
   892                           ;bitbang.c: 171: TXSTA2bits.TXEN = 1;
   893  001190  8A72               	bsf	3954,5,c	;volatile
   894                           
   895                           ;bitbang.c: 172: TXSTA2bits.SYNC = 0;
   896  001192  9872               	bcf	3954,4,c	;volatile
   897                           
   898                           ;bitbang.c: 173: TXSTA2bits.BRGH = 0;
   899  001194  9472               	bcf	3954,2,c	;volatile
   900                           
   901                           ;bitbang.c: 174: BAUDCON2bits.BRG16 = 0;
   902  001196  9670               	bcf	3952,3,c	;volatile
   903                           
   904                           ;bitbang.c: 175: RCSTA2bits.CREN = 1;
   905  001198  8871               	bsf	3953,4,c	;volatile
   906                           
   907                           ;bitbang.c: 176: SPBRG2 = 104;
   908  00119A  0E68               	movlw	104
   909  00119C  6E75               	movwf	3957,c	;volatile
   910                           
   911                           ;bitbang.c: 177: RCSTA2bits.SPEN = 1;
   912  00119E  8E71               	bsf	3953,7,c	;volatile
   913                           
   914                           ;bitbang.c: 180: TRISCbits.TRISC1 = 0;
   915  0011A0  9294               	bcf	3988,1,c	;volatile
   916                           
   917                           ;bitbang.c: 181: TRISAbits.TRISA0 = 0;
   918  0011A2  9092               	bcf	3986,0,c	;volatile
   919                           
   920                           ;bitbang.c: 182: TRISAbits.TRISA1 = 0;
   921  0011A4  9292               	bcf	3986,1,c	;volatile
   922                           
   923                           ;bitbang.c: 183: TRISAbits.TRISA2 = 0;
   924  0011A6  9492               	bcf	3986,2,c	;volatile
   925                           
   926                           ;bitbang.c: 184: TRISAbits.TRISA3 = 0;
   927  0011A8  9692               	bcf	3986,3,c	;volatile
   928                           
   929                           ;bitbang.c: 187: T0CON = 0;
   930  0011AA  0E00               	movlw	0
   931  0011AC  6ED5               	movwf	4053,c	;volatile
   932                           
   933                           ;bitbang.c: 188: TMR0L = 0;
   934  0011AE  0E00               	movlw	0
   935  0011B0  6ED6               	movwf	4054,c	;volatile
   936                           
   937                           ;bitbang.c: 189: T0CONbits.PSA = 0;
   938  0011B2  96D5               	bcf	4053,3,c	;volatile
   939                           
   940                           ;bitbang.c: 190: T0CONbits.T0PS2 = 0;
   941  0011B4  94D5               	bcf	4053,2,c	;volatile
   942                           
   943                           ;bitbang.c: 191: T0CONbits.T0PS1 = 1;
   944  0011B6  82D5               	bsf	4053,1,c	;volatile
   945                           
   946                           ;bitbang.c: 192: T0CONbits.T0PS0 = 0;
   947  0011B8  90D5               	bcf	4053,0,c	;volatile
   948                           
   949                           ;bitbang.c: 193: T0CONbits.T08BIT = 0;
   950  0011BA  9CD5               	bcf	4053,6,c	;volatile
   951                           
   952                           ;bitbang.c: 194: T0CONbits.TMR0ON = 1;
   953  0011BC  8ED5               	bsf	4053,7,c	;volatile
   954                           
   955                           ;bitbang.c: 195: TMR0 = 31536;
   956  0011BE  0E7B               	movlw	123
   957  0011C0  6ED7               	movwf	4055,c	;volatile
   958  0011C2  0E30               	movlw	48
   959  0011C4  6ED6               	movwf	4054,c	;volatile
   960                           
   961                           ;bitbang.c: 197: T1CONbits.TMR1ON = 0;
   962  0011C6  90CD               	bcf	4045,0,c	;volatile
   963                           
   964                           ;bitbang.c: 198: T1CONbits.T1CKPS0 = 1;
   965  0011C8  88CD               	bsf	4045,4,c	;volatile
   966                           
   967                           ;bitbang.c: 199: T1CONbits.T1CKPS1 = 1;
   968  0011CA  8ACD               	bsf	4045,5,c	;volatile
   969                           
   970                           ;bitbang.c: 200: PIE1bits.TMR1IE = 0;
   971  0011CC  909D               	bcf	3997,0,c	;volatile
   972                           
   973                           ;bitbang.c: 201: T1CONbits.TMR1ON = 1;
   974  0011CE  80CD               	bsf	4045,0,c	;volatile
   975                           
   976                           ;bitbang.c: 204: INTCONbits.TMR0IF = 0;
   977  0011D0  94F2               	bcf	intcon,2,c	;volatile
   978                           
   979                           ;bitbang.c: 205: INTCONbits.TMR0IE = 1;
   980  0011D2  8AF2               	bsf	intcon,5,c	;volatile
   981                           
   982                           ;bitbang.c: 207: INTCONbits.GIE = 1;
   983  0011D4  8EF2               	bsf	intcon,7,c	;volatile
   984  0011D6  0012               	return		;funcret
   985  0011D8                     __end_of_INIT_PIC:
   986                           	opt stack 0
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           intcon	equ	0xFF2
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           indf2	equ	0xFDF
   995                           fsr2h	equ	0xFDA
   996                           fsr2l	equ	0xFD9
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function _ISR *****************
  1000 ;; Defined at:
  1001 ;;		line 215 in file "bitbang.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  i               2   17[COMRAM] int 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;Total ram usage:       19 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		Interrupt level 2
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	intcode
  1029  000008                     __pintcode:
  1030                           	opt stack 0
  1031  000008                     _ISR:
  1032                           	opt stack 28
  1033                           
  1034                           ;incstack = 0
  1035  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1036  00000A  CFFA F004          	movff	pclath,??_ISR+3
  1037  00000E  CFFB F005          	movff	pclatu,??_ISR+4
  1038  000012  CFE9 F006          	movff	fsr0l,??_ISR+5
  1039  000016  CFEA F007          	movff	fsr0h,??_ISR+6
  1040  00001A  CFE1 F008          	movff	fsr1l,??_ISR+7
  1041  00001E  CFE2 F009          	movff	fsr1h,??_ISR+8
  1042  000022  CFD9 F00A          	movff	fsr2l,??_ISR+9
  1043  000026  CFDA F00B          	movff	fsr2h,??_ISR+10
  1044  00002A  CFF3 F00C          	movff	prodl,??_ISR+11
  1045  00002E  CFF4 F00D          	movff	prodh,??_ISR+12
  1046  000032  CFF6 F00E          	movff	tblptrl,??_ISR+13
  1047  000036  CFF7 F00F          	movff	tblptrh,??_ISR+14
  1048  00003A  CFF8 F010          	movff	tblptru,??_ISR+15
  1049  00003E  CFF5 F011          	movff	tablat,??_ISR+16
  1050                           
  1051                           ;bitbang.c: 217: INTCONbits.TMR0IF = 0;
  1052  000042  94F2               	bcf	intcon,2,c	;volatile
  1053                           
  1054                           ;bitbang.c: 218: LATCbits.LATC1 ^ = 1;
  1055  000044  728B               	btg	3979,1,c	;volatile
  1056                           
  1057                           ;bitbang.c: 222: LATAbits.LATA0 = 1;
  1058  000046  8089               	bsf	3977,0,c	;volatile
  1059                           
  1060                           ;bitbang.c: 223: LATAbits.LATA1 = 1;
  1061  000048  8289               	bsf	3977,1,c	;volatile
  1062                           
  1063                           ;bitbang.c: 224: LATAbits.LATA2 = 1;
  1064  00004A  8489               	bsf	3977,2,c	;volatile
  1065                           
  1066                           ;bitbang.c: 225: LATAbits.LATA3 = 1;
  1067  00004C  8689               	bsf	3977,3,c	;volatile
  1068                           
  1069                           ;bitbang.c: 229: TMR1 = 63536;
  1070  00004E  0EF8               	movlw	248
  1071  000050  6ECF               	movwf	4047,c	;volatile
  1072  000052  0E30               	movlw	48
  1073  000054  6ECE               	movwf	4046,c	;volatile
  1074  000056                     i2l79:
  1075  000056  A09E               	btfss	3998,0,c	;volatile
  1076  000058  D7FE               	goto	i2l79
  1077                           
  1078                           ;bitbang.c: 231: PIR1bits.TMR1IF = 0;
  1079  00005A  909E               	bcf	3998,0,c	;volatile
  1080                           
  1081                           ;bitbang.c: 234: for (int i = 0; i < 180; i++) {
  1082  00005C  0E00               	movlw	0
  1083  00005E  6E13               	movwf	ISR@i+1,c
  1084  000060  0E00               	movlw	0
  1085  000062  6E12               	movwf	ISR@i,c
  1086  000064                     i2l877:
  1087  000064  BE13               	btfsc	ISR@i+1,7,c
  1088  000066  D006               	goto	i2l881
  1089  000068  5013               	movf	ISR@i+1,w,c
  1090  00006A  E14F               	bnz	i2l903
  1091  00006C  0EB4               	movlw	180
  1092  00006E  5C12               	subwf	ISR@i,w,c
  1093  000070  B0D8               	btfsc	status,0,c
  1094  000072  D04B               	goto	i2l903
  1095  000074                     i2l881:
  1096                           
  1097                           ;bitbang.c: 238: if (duty_cycle[0] < i)
  1098  000074  501D               	movf	_duty_cycle,w,c
  1099  000076  6E01               	movwf	??_ISR& (0+255),c
  1100  000078  6A02               	clrf	(??_ISR+1)& (0+255),c
  1101  00007A  5012               	movf	ISR@i,w,c
  1102  00007C  5C01               	subwf	??_ISR,w,c
  1103  00007E  5002               	movf	??_ISR+1,w,c
  1104  000080  0A80               	xorlw	128
  1105  000082  6E03               	movwf	(??_ISR+2)& (0+255),c
  1106  000084  5013               	movf	ISR@i+1,w,c
  1107  000086  0A80               	xorlw	128
  1108  000088  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1109  00008A  B0D8               	btfsc	status,0,c
  1110  00008C  D002               	goto	i2l84
  1111                           
  1112                           ;bitbang.c: 239: LATAbits.LATA0 = 0;
  1113  00008E  9089               	bcf	3977,0,c	;volatile
  1114  000090  D001               	goto	i2l885
  1115  000092                     i2l84:
  1116                           
  1117                           ;bitbang.c: 240: else LATAbits.LATA0 = 1;
  1118  000092  8089               	bsf	3977,0,c	;volatile
  1119  000094                     i2l885:
  1120                           
  1121                           ;bitbang.c: 242: if (duty_cycle[1] < i)
  1122  000094  501E               	movf	_duty_cycle+1,w,c
  1123  000096  6E01               	movwf	??_ISR& (0+255),c
  1124  000098  6A02               	clrf	(??_ISR+1)& (0+255),c
  1125  00009A  5012               	movf	ISR@i,w,c
  1126  00009C  5C01               	subwf	??_ISR,w,c
  1127  00009E  5002               	movf	??_ISR+1,w,c
  1128  0000A0  0A80               	xorlw	128
  1129  0000A2  6E03               	movwf	(??_ISR+2)& (0+255),c
  1130  0000A4  5013               	movf	ISR@i+1,w,c
  1131  0000A6  0A80               	xorlw	128
  1132  0000A8  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1133  0000AA  B0D8               	btfsc	status,0,c
  1134  0000AC  D002               	goto	i2l86
  1135                           
  1136                           ;bitbang.c: 243: LATAbits.LATA1 = 0;
  1137  0000AE  9289               	bcf	3977,1,c	;volatile
  1138  0000B0  D001               	goto	i2l889
  1139  0000B2                     i2l86:
  1140                           
  1141                           ;bitbang.c: 244: else LATAbits.LATA1 = 1;
  1142  0000B2  8289               	bsf	3977,1,c	;volatile
  1143  0000B4                     i2l889:
  1144                           
  1145                           ;bitbang.c: 246: if (duty_cycle[2] < i)
  1146  0000B4  501F               	movf	_duty_cycle+2,w,c
  1147  0000B6  6E01               	movwf	??_ISR& (0+255),c
  1148  0000B8  6A02               	clrf	(??_ISR+1)& (0+255),c
  1149  0000BA  5012               	movf	ISR@i,w,c
  1150  0000BC  5C01               	subwf	??_ISR,w,c
  1151  0000BE  5002               	movf	??_ISR+1,w,c
  1152  0000C0  0A80               	xorlw	128
  1153  0000C2  6E03               	movwf	(??_ISR+2)& (0+255),c
  1154  0000C4  5013               	movf	ISR@i+1,w,c
  1155  0000C6  0A80               	xorlw	128
  1156  0000C8  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1157  0000CA  B0D8               	btfsc	status,0,c
  1158  0000CC  D002               	goto	i2l88
  1159                           
  1160                           ;bitbang.c: 247: LATAbits.LATA2 = 0;
  1161  0000CE  9489               	bcf	3977,2,c	;volatile
  1162  0000D0  D001               	goto	i2l893
  1163  0000D2                     i2l88:
  1164                           
  1165                           ;bitbang.c: 248: else LATAbits.LATA2 = 1;
  1166  0000D2  8489               	bsf	3977,2,c	;volatile
  1167  0000D4                     i2l893:
  1168                           
  1169                           ;bitbang.c: 250: if (duty_cycle[3] < i)
  1170  0000D4  5020               	movf	_duty_cycle+3,w,c
  1171  0000D6  6E01               	movwf	??_ISR& (0+255),c
  1172  0000D8  6A02               	clrf	(??_ISR+1)& (0+255),c
  1173  0000DA  5012               	movf	ISR@i,w,c
  1174  0000DC  5C01               	subwf	??_ISR,w,c
  1175  0000DE  5002               	movf	??_ISR+1,w,c
  1176  0000E0  0A80               	xorlw	128
  1177  0000E2  6E03               	movwf	(??_ISR+2)& (0+255),c
  1178  0000E4  5013               	movf	ISR@i+1,w,c
  1179  0000E6  0A80               	xorlw	128
  1180  0000E8  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1181  0000EA  B0D8               	btfsc	status,0,c
  1182  0000EC  D002               	goto	i2l90
  1183                           
  1184                           ;bitbang.c: 251: LATAbits.LATA3 = 0;
  1185  0000EE  9689               	bcf	3977,3,c	;volatile
  1186  0000F0  D001               	goto	i2l91
  1187  0000F2                     i2l90:
  1188                           
  1189                           ;bitbang.c: 252: else LATAbits.LATA3 = 1;
  1190  0000F2  8689               	bsf	3977,3,c	;volatile
  1191  0000F4                     i2l91:
  1192                           
  1193                           ;bitbang.c: 255: PIR1bits.TMR1IF = 0;
  1194  0000F4  909E               	bcf	3998,0,c	;volatile
  1195                           
  1196                           ;bitbang.c: 256: TMR1 = 65525;
  1197  0000F6  0EFF               	movlw	255
  1198  0000F8  6ECF               	movwf	4047,c	;volatile
  1199  0000FA  0EF5               	movlw	245
  1200  0000FC  6ECE               	movwf	4046,c	;volatile
  1201  0000FE                     i2l92:
  1202  0000FE  A09E               	btfss	3998,0,c	;volatile
  1203  000100  D7FE               	goto	i2l92
  1204                           
  1205                           ;bitbang.c: 258: PIR1bits.TMR1IF = 0;
  1206  000102  909E               	bcf	3998,0,c	;volatile
  1207  000104  4A12               	infsnz	ISR@i,f,c
  1208  000106  2A13               	incf	ISR@i+1,f,c
  1209  000108  D7AD               	goto	i2l877
  1210  00010A                     i2l903:
  1211                           
  1212                           ;bitbang.c: 259: }
  1213                           ;bitbang.c: 261: LATCbits.LATC1 ^= 1;
  1214  00010A  728B               	btg	3979,1,c	;volatile
  1215                           
  1216                           ;bitbang.c: 262: TMR0 = 31536;
  1217  00010C  0E7B               	movlw	123
  1218  00010E  6ED7               	movwf	4055,c	;volatile
  1219  000110  0E30               	movlw	48
  1220  000112  6ED6               	movwf	4054,c	;volatile
  1221                           
  1222                           ;bitbang.c: 264: counter++;
  1223  000114  2A25               	incf	_counter,f,c
  1224  000116  C011  FFF5         	movff	??_ISR+16,tablat
  1225  00011A  C010  FFF8         	movff	??_ISR+15,tblptru
  1226  00011E  C00F  FFF7         	movff	??_ISR+14,tblptrh
  1227  000122  C00E  FFF6         	movff	??_ISR+13,tblptrl
  1228  000126  C00D  FFF4         	movff	??_ISR+12,prodh
  1229  00012A  C00C  FFF3         	movff	??_ISR+11,prodl
  1230  00012E  C00B  FFDA         	movff	??_ISR+10,fsr2h
  1231  000132  C00A  FFD9         	movff	??_ISR+9,fsr2l
  1232  000136  C009  FFE2         	movff	??_ISR+8,fsr1h
  1233  00013A  C008  FFE1         	movff	??_ISR+7,fsr1l
  1234  00013E  C007  FFEA         	movff	??_ISR+6,fsr0h
  1235  000142  C006  FFE9         	movff	??_ISR+5,fsr0l
  1236  000146  C005  FFFB         	movff	??_ISR+4,pclatu
  1237  00014A  C004  FFFA         	movff	??_ISR+3,pclath
  1238  00014E  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1239  000150  0011               	retfie		f
  1240  000152                     __end_of_ISR:
  1241                           	opt stack 0
  1242                           pclatu	equ	0xFFB
  1243                           pclath	equ	0xFFA
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           prodh	equ	0xFF4
  1249                           prodl	equ	0xFF3
  1250                           intcon	equ	0xFF2
  1251                           postinc0	equ	0xFEE
  1252                           fsr0h	equ	0xFEA
  1253                           fsr0l	equ	0xFE9
  1254                           wreg	equ	0xFE8
  1255                           fsr1h	equ	0xFE2
  1256                           fsr1l	equ	0xFE1
  1257                           indf2	equ	0xFDF
  1258                           fsr2h	equ	0xFDA
  1259                           fsr2l	equ	0xFD9
  1260                           status	equ	0xFD8
  1261                           pclatu	equ	0xFFB
  1262                           pclath	equ	0xFFA
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           fsr0h	equ	0xFEA
  1272                           fsr0l	equ	0xFE9
  1273                           wreg	equ	0xFE8
  1274                           fsr1h	equ	0xFE2
  1275                           fsr1l	equ	0xFE1
  1276                           indf2	equ	0xFDF
  1277                           fsr2h	equ	0xFDA
  1278                           fsr2l	equ	0xFD9
  1279                           status	equ	0xFD8
  1280                           
  1281                           	psect	rparam
  1282  0000                     pclatu	equ	0xFFB
  1283                           pclath	equ	0xFFA
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           fsr0h	equ	0xFEA
  1293                           fsr0l	equ	0xFE9
  1294                           wreg	equ	0xFE8
  1295                           fsr1h	equ	0xFE2
  1296                           fsr1l	equ	0xFE1
  1297                           indf2	equ	0xFDF
  1298                           fsr2h	equ	0xFDA
  1299                           fsr2l	equ	0xFD9
  1300                           status	equ	0xFD8
  1301                           
  1302                           	psect	temp
  1303  000028                     btemp:
  1304                           	opt stack 0
  1305  000028                     	ds	1
  1306  0000                     int$flags	set	btemp
  1307                           pclatu	equ	0xFFB
  1308                           pclath	equ	0xFFA
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           prodh	equ	0xFF4
  1314                           prodl	equ	0xFF3
  1315                           intcon	equ	0xFF2
  1316                           postinc0	equ	0xFEE
  1317                           fsr0h	equ	0xFEA
  1318                           fsr0l	equ	0xFE9
  1319                           wreg	equ	0xFE8
  1320                           fsr1h	equ	0xFE2
  1321                           fsr1l	equ	0xFE1
  1322                           indf2	equ	0xFDF
  1323                           fsr2h	equ	0xFDA
  1324                           fsr2l	equ	0xFD9
  1325                           status	equ	0xFD8


Data Sizes:
    Strings     101
    Constant    0
    Data        2
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_8(CODE[3]), STR_7(CODE[17]), STR_6(CODE[19]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), STR_3(CODE[15]), STR_2(CODE[32]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     665
                           _INIT_PIC
                  _direction_routine
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     665
                                             20 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _direction_routine                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_PIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 19    19      0      90
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_PIC
   _direction_routine
   _printf
     _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      27       1       41.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      12        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Apr 10 11:47:47 2016

                              l98 1248                               l110 11EE  
                             l911 111A                               l817 11DA  
                             l921 1144                               l827 1204  
                             l915 112A                               l917 1130  
                             l925 114C                               l927 116E  
                             l951 10D4                               l943 1084  
                             l945 10B6                               l947 10C4  
                             l955 10E8                               l939 107C  
                             l957 10FE                               _ISR 0008  
                             wreg 000FE8                        _TXSTA2bits 000F72  
                    __CFG_LVP$OFF 000000                              ?_ISR 0001  
                            ISR@i 0012                              STR_1 101E  
                            STR_2 1001                              STR_3 1045  
                            STR_4 105C                              STR_5 1054  
                            STR_6 1021                              STR_7 1034  
                            STR_8 1063                     __CFG_DEBUG$ON 000000  
                            i2l90 00F2                              i2l91 00F4  
                            i2l92 00FE                              i2l84 0092  
                            i2l86 00B2                              i2l79 0056  
                            i2l88 00D2                              _TMR0 000FD6  
                            _TMR1 000FCE                      __CFG_WDTPS$1 000000  
      __size_of_direction_routine 003C                              _main 1068  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0028  
                   __CFG_BORV$285 000000                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0152                     __CFG_IESO$OFF 000000  
                    ___param_bank 000010                             ??_ISR 0001  
                    _BAUDCON2bits 000F70                  __end_of_INIT_PIC 11D8  
                           ?_main 0001                             _T0CON 000FD5  
                           i2l903 010A                             i2l881 0074  
                           i2l893 00D4                             i2l885 0094  
                           i2l877 0064                             i2l889 00B4  
                           _TMR0L 000FD6                             _TX2IF 007D24  
                  __CFG_FCMEN$OFF 000000                __CFG_MCLRE$EXTMCLR 000000  
                           _putch 1246                    __CFG_BOREN$OFF 000000  
                           tablat 000FF5                             status 000FD8  
                 __initialization 1214                      __end_of_main 1110  
                          ??_main 001D                     __activetblptr 000002  
                  __CFG_PLLCFG$ON 000000                            ?_putch 0001  
                  __CFG_WDTEN$OFF 000000                            _RCREG2 000F74  
                          _SPBRG2 000F75                            _TX2REG 000F73  
                  __CFG_PWRTEN$ON 000000                    __CFG_XINST$OFF 000000  
                          clear_0 121A                            _printf 1110  
                    __pdataCOMRAM 0026                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0014  
                 __CFG_HFOFST$OFF 000000                        __accesstop 0060  
         __end_of__initialization 1238                   __CFG_PBADEN$OFF 000000  
                       ?_INIT_PIC 0001                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001                     __end_of_putch 1252  
                         ??_putch 0014                        ??_INIT_PIC 0014  
              __CFG_CCP2MX$PORTC1 000000                __CFG_CCP3MX$PORTB5 000000  
                         ?_printf 0015                 __CFG_PRICLKEN$OFF 000000  
                         __Hparam 0000                           __Lparam 0000  
                    __psmallconst 1000                   __CFG_STVREN$OFF 000000  
                         __pcinit 1214                           __ramtop 1000  
                         __ptext0 1068                           __ptext1 1110  
                         __ptext2 1246                           __ptext3 11D8  
                         __ptext4 1188                   __size_of_printf 0078  
                       _T0CONbits 000FD5                      __size_of_ISR 014A  
                       _T1CONbits 000FCD                           _counter 0025  
                      _duty_cycle 001D              end_of_initialization 1238  
                   __Lmediumconst 0000                           printf@c 001C  
                         printf@f 0015                           postinc0 000FEE  
                       _TRISAbits 000F92                         _TRISCbits 000F94  
               __size_of_INIT_PIC 0050                     __pidataCOMRAM 1252  
                  __end_of_printf 1188               start_initialization 1214  
                     __end_of_ISR 0152                          ??_printf 0019  
                     __pbssCOMRAM 001D                         __pintcode 0008  
                       _direction 0026                       __smallconst 1000  
direction_routine@direction_state 0027                    __size_of_putch 000C  
                        _LATAbits 000F89                          _LATCbits 000F8B  
                        _INIT_PIC 1188                          _PIE1bits 000F9D  
                        _PIR1bits 000F9E                          _PIR3bits 000FA4  
                      printf@flag 0019                          __Hrparam 0000  
                        __Lrparam 0000                 __CFG_P2BMX$PORTC0 000000  
                   __size_of_main 00A8                 _direction_routine 11D8  
              ?_direction_routine 0001                          int$flags 0028  
             ??_direction_routine 0014                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                          intlevel2 0000  
       __end_of_direction_routine 1214                        _RCSTA2bits 000F71  
                      _OSCCONbits 000FD3                          printf@ap 001A  
               __CFG_T3CMX$PORTC0 000000                 __CFG_FOSC$INTIO67 000000  
                     _pwm_channel 0021  
