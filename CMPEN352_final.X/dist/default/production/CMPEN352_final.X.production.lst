

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Apr 10 14:38:44 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  00131C                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _direction
    26  00131C  66                 	db	102
    27  0000                     _TMR0	set	4054
    28  0000                     _TMR1	set	4046
    29  0000                     _BAUDCON2bits	set	3952
    30  0000                     _INTCONbits	set	4082
    31  0000                     _LATAbits	set	3977
    32  0000                     _LATCbits	set	3979
    33  0000                     _OSCCONbits	set	4051
    34  0000                     _OSCTUNEbits	set	3995
    35  0000                     _PIE1bits	set	3997
    36  0000                     _PIR1bits	set	3998
    37  0000                     _PIR3bits	set	4004
    38  0000                     _RCREG2	set	3956
    39  0000                     _RCSTA2bits	set	3953
    40  0000                     _SPBRG2	set	3957
    41  0000                     _T0CON	set	4053
    42  0000                     _T0CONbits	set	4053
    43  0000                     _T1CONbits	set	4045
    44  0000                     _TMR0L	set	4054
    45  0000                     _TRISAbits	set	3986
    46  0000                     _TRISCbits	set	3988
    47  0000                     _TX2REG	set	3955
    48  0000                     _TXSTA2bits	set	3954
    49  0000                     _TX2IF	set	32036
    50                           
    51                           	psect	smallconst
    52  001000                     __psmallconst:
    53                           	opt stack 0
    54  001000  00                 	db	0
    55  001001                     STR_2:
    56  001001  2D                 	db	45
    57  001002  2D                 	db	45
    58  001003  2D                 	db	45
    59  001004  2D                 	db	45
    60  001005  2D                 	db	45
    61  001006  2D                 	db	45
    62  001007  2D                 	db	45
    63  001008  2D                 	db	45
    64  001009  2D                 	db	45
    65  00100A  2D                 	db	45
    66  00100B  2D                 	db	45
    67  00100C  2D                 	db	45
    68  00100D  2D                 	db	45
    69  00100E  48                 	db	72	;'H'
    70  00100F  45                 	db	69	;'E'
    71  001010  4C                 	db	76	;'L'
    72  001011  50                 	db	80	;'P'
    73  001012  2D                 	db	45
    74  001013  2D                 	db	45
    75  001014  2D                 	db	45
    76  001015  2D                 	db	45
    77  001016  2D                 	db	45
    78  001017  2D                 	db	45
    79  001018  2D                 	db	45
    80  001019  2D                 	db	45
    81  00101A  2D                 	db	45
    82  00101B  2D                 	db	45
    83  00101C  2D                 	db	45
    84  00101D  2D                 	db	45
    85  00101E  0D                 	db	13
    86  00101F  0A                 	db	10
    87  001020  00                 	db	0
    88  001021                     STR_8:
    89  001021  64                 	db	100	;'d'
    90  001022  69                 	db	105	;'i'
    91  001023  72                 	db	114	;'r'
    92  001024  65                 	db	101	;'e'
    93  001025  63                 	db	99	;'c'
    94  001026  74                 	db	116	;'t'
    95  001027  69                 	db	105	;'i'
    96  001028  6F                 	db	111	;'o'
    97  001029  6E                 	db	110	;'n'
    98  00102A  20                 	db	32
    99  00102B  69                 	db	105	;'i'
   100  00102C  73                 	db	115	;'s'
   101  00102D  20                 	db	32
   102  00102E  25                 	db	37
   103  00102F  63                 	db	99	;'c'
   104  001030  2F                 	db	47
   105  001031  72                 	db	114	;'r'
   106  001032  2F                 	db	47
   107  001033  6E                 	db	110	;'n'
   108  001034  00                 	db	0
   109  001035                     STR_7:
   110  001035  77                 	db	119	;'w'
   111  001036  68                 	db	104	;'h'
   112  001037  69                 	db	105	;'i'
   113  001038  63                 	db	99	;'c'
   114  001039  68                 	db	104	;'h'
   115  00103A  20                 	db	32
   116  00103B  64                 	db	100	;'d'
   117  00103C  69                 	db	105	;'i'
   118  00103D  72                 	db	114	;'r'
   119  00103E  65                 	db	101	;'e'
   120  00103F  63                 	db	99	;'c'
   121  001040  74                 	db	116	;'t'
   122  001041  69                 	db	105	;'i'
   123  001042  6F                 	db	111	;'o'
   124  001043  6E                 	db	110	;'n'
   125  001044  3F                 	db	63	;'?'
   126  001045  0D                 	db	13
   127  001046  0A                 	db	10
   128  001047  00                 	db	0
   129  001048                     STR_6:
   130  001048  6C                 	db	108	;'l'
   131  001049  69                 	db	105	;'i'
   132  00104A  67                 	db	103	;'g'
   133  00104B  68                 	db	104	;'h'
   134  00104C  74                 	db	116	;'t'
   135  00104D  20                 	db	32
   136  00104E  73                 	db	115	;'s'
   137  00104F  68                 	db	104	;'h'
   138  001050  6F                 	db	111	;'o'
   139  001051  75                 	db	117	;'u'
   140  001052  6C                 	db	108	;'l'
   141  001053  64                 	db	100	;'d'
   142  001054  20                 	db	32
   143  001055  62                 	db	98	;'b'
   144  001056  65                 	db	101	;'e'
   145  001057  20                 	db	32
   146  001058  6F                 	db	111	;'o'
   147  001059  6E                 	db	110	;'n'
   148  00105A  00                 	db	0
   149  00105B                     STR_9:
   150  00105B  55                 	db	85	;'U'
   151  00105C  6E                 	db	110	;'n'
   152  00105D  6B                 	db	107	;'k'
   153  00105E  6E                 	db	110	;'n'
   154  00105F  6F                 	db	111	;'o'
   155  001060  77                 	db	119	;'w'
   156  001061  6E                 	db	110	;'n'
   157  001062  20                 	db	32
   158  001063  6B                 	db	107	;'k'
   159  001064  65                 	db	101	;'e'
   160  001065  79                 	db	121	;'y'
   161  001066  20                 	db	32
   162  001067  25                 	db	37
   163  001068  63                 	db	99	;'c'
   164  001069  0D                 	db	13
   165  00106A  0A                 	db	10
   166  00106B  00                 	db	0
   167  00106C                     STR_3:
   168  00106C  3F                 	db	63	;'?'
   169  00106D  3A                 	db	58	;':'
   170  00106E  20                 	db	32
   171  00106F  68                 	db	104	;'h'
   172  001070  65                 	db	101	;'e'
   173  001071  6C                 	db	108	;'l'
   174  001072  70                 	db	112	;'p'
   175  001073  20                 	db	32
   176  001074  6D                 	db	109	;'m'
   177  001075  65                 	db	101	;'e'
   178  001076  6E                 	db	110	;'n'
   179  001077  75                 	db	117	;'u'
   180  001078  0D                 	db	13
   181  001079  0A                 	db	10
   182  00107A  00                 	db	0
   183  00107B                     STR_5:
   184  00107B  6F                 	db	111	;'o'
   185  00107C  3A                 	db	58	;':'
   186  00107D  09                 	db	9
   187  00107E  6F                 	db	111	;'o'
   188  00107F  6B                 	db	107	;'k'
   189  001080  0D                 	db	13
   190  001081  0A                 	db	10
   191  001082  00                 	db	0
   192  001083                     STR_4:
   193  001083  6F                 	db	111	;'o'
   194  001084  3A                 	db	58	;':'
   195  001085  20                 	db	32
   196  001086  6B                 	db	107	;'k'
   197  001087  0D                 	db	13
   198  001088  0A                 	db	10
   199  001089  00                 	db	0
   200  00108A                     STR_10:
   201  00108A  3E                 	db	62	;'>'
   202  00108B  20                 	db	32
   203  00108C  00                 	db	0
   204  0000                     
   205                           ; #config settings
   206  00108D  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	cinit
   209  0012E4                     __pcinit:
   210                           	opt stack 0
   211  0012E4                     start_initialization:
   212                           	opt stack 0
   213  0012E4                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Clear objects allocated to COMRAM (10 bytes)
   217  0012E4  EE00  F01D         	lfsr	0,__pbssCOMRAM
   218  0012E8  0E0A               	movlw	10
   219  0012EA                     clear_0:
   220  0012EA  6AEE               	clrf	postinc0,c
   221  0012EC  06E8               	decf	wreg,f,c
   222  0012EE  E1FD               	bnz	clear_0
   223                           
   224                           ; Initialize objects allocated to COMRAM (1 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226  0012F0  0E1C               	movlw	low __pidataCOMRAM
   227  0012F2  6EF6               	movwf	tblptrl,c
   228  0012F4  0E13               	movlw	high __pidataCOMRAM
   229  0012F6  6EF7               	movwf	tblptrh,c
   230  0012F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231  0012FA  6EF8               	movwf	tblptru,c
   232  0012FC  0009               	tblrd		*+	;fetch initializer
   233  0012FE  CFF5 F027          	movff	tablat,__pdataCOMRAM
   234  001302                     end_of_initialization:
   235                           	opt stack 0
   236  001302                     __end_of__initialization:
   237                           	opt stack 0
   238  001302  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239  001304  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240  001306  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241  001308  6EF8               	movwf	tblptru,c
   242  00130A  0100               	movlb	0
   243  00130C  EF47  F008         	goto	_main	;jump to C main() function
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251                           	psect	bssCOMRAM
   252  00001D                     __pbssCOMRAM:
   253                           	opt stack 0
   254  00001D                     _duty_cycle:
   255                           	opt stack 0
   256  00001D                     	ds	4
   257  000021                     _pwm_channel:
   258                           	opt stack 0
   259  000021                     	ds	4
   260  000025                     _counter:
   261                           	opt stack 0
   262  000025                     	ds	1
   263  000026                     _direction_change:
   264                           	opt stack 0
   265  000026                     	ds	1
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	dataCOMRAM
   274  000027                     __pdataCOMRAM:
   275                           	opt stack 0
   276  000027                     _direction:
   277                           	opt stack 0
   278  000027                     	ds	1
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	cstackCOMRAM
   287  000001                     __pcstackCOMRAM:
   288                           	opt stack 0
   289  000001                     ??_ISR:
   290  000001                     
   291                           ; 0 bytes @ 0x0
   292  000001                     	ds	17
   293  000012                     ISR@i:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x11
   297  000012                     	ds	2
   298  000014                     putch@c:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x13
   302  000014                     	ds	1
   303  000015                     ?_printf:
   304                           	opt stack 0
   305  000015                     printf@f:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x14
   309  000015                     	ds	4
   310  000019                     printf@flag:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x18
   314  000019                     	ds	1
   315  00001A                     printf@ap:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x19
   319  00001A                     	ds	2
   320  00001C                     printf@c:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x1B
   324  00001C                     	ds	1
   325  00001D                     tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           
   332                           ; 0 bytes @ 0x1C
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 90 in file "bitbang.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;		None               void
   345 ;; Registers used:
   346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels required when called:    4
   358 ;; This function calls:
   359 ;;		_INIT_PIC
   360 ;;		_printf
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text0
   367  00108E                     __ptext0:
   368                           	opt stack 0
   369  00108E                     _main:
   370                           	opt stack 27
   371                           
   372                           ;bitbang.c: 94: INIT_PIC();
   373                           
   374                           ;incstack = 0
   375  00108E  EC4A  F009         	call	_INIT_PIC	;wreg free
   376                           
   377                           ;bitbang.c: 98: duty_cycle[0] = 45;
   378  001092  0E2D               	movlw	45
   379  001094  6E1D               	movwf	_duty_cycle,c
   380                           
   381                           ;bitbang.c: 99: duty_cycle[1] = 45;
   382  001096  0E2D               	movlw	45
   383  001098  6E1E               	movwf	_duty_cycle+1,c
   384                           
   385                           ;bitbang.c: 100: duty_cycle[2] = 45;
   386  00109A  0E2D               	movlw	45
   387  00109C  6E1F               	movwf	_duty_cycle+2,c
   388                           
   389                           ;bitbang.c: 101: duty_cycle[3] = 45;
   390  00109E  0E2D               	movlw	45
   391  0010A0  6E20               	movwf	_duty_cycle+3,c
   392  0010A2                     l972:
   393                           
   394                           ;bitbang.c: 105: if (PIR3bits.RC2IF) {
   395  0010A2  AAA4               	btfss	4004,5,c	;volatile
   396  0010A4  D7FE               	goto	l972
   397                           
   398                           ;bitbang.c: 106: PIR3bits.RC2IF = 0;
   399  0010A6  9AA4               	bcf	4004,5,c	;volatile
   400                           
   401                           ;bitbang.c: 110: switch (RCREG2) {
   402  0010A8  D047               	goto	l992
   403  0010AA                     l976:
   404                           
   405                           ;bitbang.c: 115: printf("\r\n");
   406  0010AA  0E1E               	movlw	low (STR_2+29)
   407  0010AC  6E15               	movwf	printf@f,c
   408  0010AE  0E10               	movlw	high (STR_2+29)
   409  0010B0  6E16               	movwf	printf@f+1,c
   410  0010B2  EC0E  F009         	call	_printf	;wreg free
   411                           
   412                           ;bitbang.c: 116: printf("-------------HELP------------\r\n");
   413  0010B6  0E01               	movlw	low STR_2
   414  0010B8  6E15               	movwf	printf@f,c
   415  0010BA  0E10               	movlw	high STR_2
   416  0010BC  6E16               	movwf	printf@f+1,c
   417  0010BE  EC0E  F009         	call	_printf	;wreg free
   418                           
   419                           ;bitbang.c: 117: printf("?: help menu\r\n");
   420  0010C2  0E6C               	movlw	low STR_3
   421  0010C4  6E15               	movwf	printf@f,c
   422  0010C6  0E10               	movlw	high STR_3
   423  0010C8  6E16               	movwf	printf@f+1,c
   424  0010CA  EC0E  F009         	call	_printf	;wreg free
   425                           
   426                           ;bitbang.c: 118: printf("o: k\r\n");
   427  0010CE  0E83               	movlw	low STR_4
   428  0010D0  6E15               	movwf	printf@f,c
   429  0010D2  0E10               	movlw	high STR_4
   430  0010D4  6E16               	movwf	printf@f+1,c
   431  0010D6  EC0E  F009         	call	_printf	;wreg free
   432                           
   433                           ;bitbang.c: 119: break;
   434  0010DA  D03C               	goto	l994
   435  0010DC                     l978:
   436                           
   437                           ;bitbang.c: 125: printf("o:	ok\r\n");
   438  0010DC  0E7B               	movlw	low STR_5
   439  0010DE  6E15               	movwf	printf@f,c
   440  0010E0  0E10               	movlw	high STR_5
   441  0010E2  6E16               	movwf	printf@f+1,c
   442  0010E4  EC0E  F009         	call	_printf	;wreg free
   443                           
   444                           ;bitbang.c: 126: break;
   445  0010E8  D035               	goto	l994
   446  0010EA                     l980:
   447                           
   448                           ;bitbang.c: 132: printf("light should be on");
   449  0010EA  0E48               	movlw	low STR_6
   450  0010EC  6E15               	movwf	printf@f,c
   451  0010EE  0E10               	movlw	high STR_6
   452  0010F0  6E16               	movwf	printf@f+1,c
   453  0010F2  EC0E  F009         	call	_printf	;wreg free
   454                           
   455                           ;bitbang.c: 133: LATCbits.LATC1 ^= 1;
   456  0010F6  728B               	btg	3979,1,c	;volatile
   457                           
   458                           ;bitbang.c: 134: break;
   459  0010F8  D02D               	goto	l994
   460  0010FA                     l984:
   461                           
   462                           ;bitbang.c: 140: printf("which direction?\r\n");
   463  0010FA  0E35               	movlw	low STR_7
   464  0010FC  6E15               	movwf	printf@f,c
   465  0010FE  0E10               	movlw	high STR_7
   466  001100  6E16               	movwf	printf@f+1,c
   467  001102  EC0E  F009         	call	_printf	;wreg free
   468  001106                     l71:
   469  001106  AAA4               	btfss	4004,5,c	;volatile
   470  001108  D7FE               	goto	l71
   471                           
   472                           ;bitbang.c: 142: PIR3bits.RC2IF = 0;
   473  00110A  9AA4               	bcf	4004,5,c	;volatile
   474                           
   475                           ;bitbang.c: 143: direction = RCREG2;
   476  00110C  CF74 F027          	movff	3956,_direction	;volatile
   477                           
   478                           ;bitbang.c: 144: printf("direction is %c/r/n", direction);
   479  001110  0E21               	movlw	low STR_8
   480  001112  6E15               	movwf	printf@f,c
   481  001114  0E10               	movlw	high STR_8
   482  001116  6E16               	movwf	printf@f+1,c
   483  001118  C027  F017         	movff	_direction,?_printf+2
   484  00111C  6A18               	clrf	?_printf+3,c
   485  00111E  EC0E  F009         	call	_printf	;wreg free
   486                           
   487                           ;bitbang.c: 145: break;
   488  001122  D018               	goto	l994
   489  001124                     l988:
   490                           
   491                           ;bitbang.c: 150: printf("Unknown key %c\r\n", RCREG2);
   492  001124  0E5B               	movlw	low STR_9
   493  001126  6E15               	movwf	printf@f,c
   494  001128  0E10               	movlw	high STR_9
   495  00112A  6E16               	movwf	printf@f+1,c
   496  00112C  CF74 F017          	movff	3956,?_printf+2	;volatile
   497  001130  6A18               	clrf	?_printf+3,c
   498  001132  EC0E  F009         	call	_printf	;wreg free
   499                           
   500                           ;bitbang.c: 153: }
   501                           
   502                           ;bitbang.c: 151: break;
   503  001136  D00E               	goto	l994
   504  001138                     l992:
   505  001138  5074               	movf	3956,w,c	;volatile
   506                           
   507                           ; Switch size 1, requested type "space"
   508                           ; Number of cases is 4, Range of values is 63 to 111
   509                           ; switch strategies available:
   510                           ; Name         Instructions Cycles
   511                           ; simple_byte           13     7 (average)
   512                           ;	Chosen strategy is simple_byte
   513  00113A  0A3F               	xorlw	63	; case 63
   514  00113C  B4D8               	btfsc	status,2,c
   515  00113E  D7B5               	goto	l976
   516  001140  0A5C               	xorlw	92	; case 99
   517  001142  B4D8               	btfsc	status,2,c
   518  001144  D7DA               	goto	l984
   519  001146  0A0A               	xorlw	10	; case 105
   520  001148  B4D8               	btfsc	status,2,c
   521  00114A  D7CF               	goto	l980
   522  00114C  0A06               	xorlw	6	; case 111
   523  00114E  B4D8               	btfsc	status,2,c
   524  001150  D7C5               	goto	l978
   525  001152  D7E8               	goto	l988
   526  001154                     l994:
   527                           
   528                           ;bitbang.c: 154: printf("> ");
   529  001154  0E8A               	movlw	low STR_10
   530  001156  6E15               	movwf	printf@f,c
   531  001158  0E10               	movlw	high STR_10
   532  00115A  6E16               	movwf	printf@f+1,c
   533  00115C  EC0E  F009         	call	_printf	;wreg free
   534  001160  D7A0               	goto	l972
   535  001162                     __end_of_main:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           status	equ	0xFD8
   544                           
   545 ;; *************** function _printf *****************
   546 ;; Defined at:
   547 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  f               2   20[COMRAM] PTR const unsigned char 
   550 ;;		 -> STR_10(3), STR_9(17), STR_8(20), STR_7(19), 
   551 ;;		 -> STR_6(19), STR_5(8), STR_4(7), STR_3(15), 
   552 ;;		 -> STR_2(32), STR_1(3), 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  tmpval          4    0        struct .
   555 ;;  cp              3    0        PTR const unsigned char 
   556 ;;  ap              2   25[COMRAM] PTR void [1]
   557 ;;		 -> ?_printf(2), 
   558 ;;  len             2    0        unsigned int 
   559 ;;  val             2    0        unsigned int 
   560 ;;  c               1   27[COMRAM] char 
   561 ;;  flag            1   24[COMRAM] unsigned char 
   562 ;;  prec            1    0        char 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  2   20[COMRAM] int 
   565 ;; Registers used:
   566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;Total ram usage:        8 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    3
   579 ;; This function calls:
   580 ;;		_putch
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text1
   587  00121C                     __ptext1:
   588                           	opt stack 0
   589  00121C                     _printf:
   590                           	opt stack 27
   591                           
   592                           ;doprnt.c: 466: va_list ap;
   593                           ;doprnt.c: 499: signed char c;
   594                           ;doprnt.c: 506: signed char prec;
   595                           ;doprnt.c: 508: unsigned char flag;
   596                           ;doprnt.c: 523: union {
   597                           ;doprnt.c: 524: unsigned long vd;
   598                           ;doprnt.c: 525: double integ;
   599                           ;doprnt.c: 526: } tmpval;
   600                           ;doprnt.c: 528: unsigned int val;
   601                           ;doprnt.c: 529: unsigned len;
   602                           ;doprnt.c: 530: const char * cp;
   603                           ;doprnt.c: 533: *ap = __va_start();
   604                           
   605                           ;incstack = 0
   606  00121C  0E17               	movlw	low (?_printf+2)
   607  00121E  6E1A               	movwf	printf@ap,c
   608  001220  0E00               	movlw	high (?_printf+2)
   609  001222  6E1B               	movwf	printf@ap+1,c
   610                           
   611                           ;doprnt.c: 536: while(c = *f++) {
   612  001224  D02A               	goto	l960
   613  001226                     l944:
   614                           
   615                           ;doprnt.c: 538: if(c != '%')
   616  001226  0E25               	movlw	37
   617  001228  181C               	xorwf	printf@c,w,c
   618  00122A  B4D8               	btfsc	status,2,c
   619  00122C  D004               	goto	l948
   620                           
   621                           ;doprnt.c: 540: {
   622                           ;doprnt.c: 541: (putch(c) );
   623  00122E  501C               	movf	printf@c,w,c
   624  001230  EC88  F009         	call	_putch
   625                           
   626                           ;doprnt.c: 542: continue;
   627  001234  D022               	goto	l960
   628  001236                     l948:
   629                           
   630                           ;doprnt.c: 543: }
   631                           ;doprnt.c: 548: flag = 0;
   632  001236  0E00               	movlw	0
   633  001238  6E19               	movwf	printf@flag,c
   634                           
   635                           ;doprnt.c: 635: switch(c = *f++) {
   636  00123A  D00E               	goto	l958
   637  00123C                     l950:
   638                           
   639                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   640  00123C  C01A  FFD9         	movff	printf@ap,fsr2l
   641  001240  C01B  FFDA         	movff	printf@ap+1,fsr2h
   642  001244  50DF               	movf	indf2,w,c
   643  001246  6E1C               	movwf	printf@c,c
   644  001248  0E02               	movlw	2
   645  00124A  261A               	addwf	printf@ap,f,c
   646  00124C  0E00               	movlw	0
   647  00124E  221B               	addwfc	printf@ap+1,f,c
   648  001250                     l954:
   649                           
   650                           ;doprnt.c: 809: (putch(c) );
   651  001250  501C               	movf	printf@c,w,c
   652  001252  EC88  F009         	call	_putch
   653                           
   654                           ;doprnt.c: 822: }
   655                           
   656                           ;doprnt.c: 810: continue;
   657  001256  D011               	goto	l960
   658  001258                     l958:
   659  001258  C015  FFF6         	movff	printf@f,tblptrl
   660  00125C  C016  FFF7         	movff	printf@f+1,tblptrh
   661  001260  4A15               	infsnz	printf@f,f,c
   662  001262  2A16               	incf	printf@f+1,f,c
   663  001264                     	if	0	;tblptru may be non-zero
   664  001264                     	endif
   665  001264                     	if	0	;tblptru may be non-zero
   666  001264                     	endif
   667  001264  0008               	tblrd		*
   668  001266  CFF5 F01C          	movff	tablat,printf@c
   669  00126A  501C               	movf	printf@c,w,c
   670                           
   671                           ; Switch size 1, requested type "space"
   672                           ; Number of cases is 2, Range of values is 0 to 99
   673                           ; switch strategies available:
   674                           ; Name         Instructions Cycles
   675                           ; simple_byte            7     4 (average)
   676                           ;	Chosen strategy is simple_byte
   677  00126C  0A00               	xorlw	0	; case 0
   678  00126E  B4D8               	btfsc	status,2,c
   679  001270  0012               	return	
   680  001272  0A63               	xorlw	99	; case 99
   681  001274  B4D8               	btfsc	status,2,c
   682  001276  D7E2               	goto	l950
   683  001278  D7EB               	goto	l954
   684  00127A                     l960:
   685  00127A  C015  FFF6         	movff	printf@f,tblptrl
   686  00127E  C016  FFF7         	movff	printf@f+1,tblptrh
   687  001282  4A15               	infsnz	printf@f,f,c
   688  001284  2A16               	incf	printf@f+1,f,c
   689  001286                     	if	0	;tblptru may be non-zero
   690  001286                     	endif
   691  001286                     	if	0	;tblptru may be non-zero
   692  001286                     	endif
   693  001286  0008               	tblrd		*
   694  001288  CFF5 F01C          	movff	tablat,printf@c
   695  00128C  501C               	movf	printf@c,w,c
   696  00128E  B4D8               	btfsc	status,2,c
   697  001290  0012               	return	
   698  001292  D7C9               	goto	l944
   699  001294                     __end_of_printf:
   700                           	opt stack 0
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           indf2	equ	0xFDF
   708                           fsr2h	equ	0xFDA
   709                           fsr2l	equ	0xFD9
   710                           status	equ	0xFD8
   711                           
   712 ;; *************** function _putch *****************
   713 ;; Defined at:
   714 ;;		line 362 in file "bitbang.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  c               1    wreg     unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  c               1   19[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;		None               void
   721 ;; Registers used:
   722 ;;		wreg
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;Total ram usage:        1 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    2
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_printf
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text2
   743  001310                     __ptext2:
   744                           	opt stack 0
   745  001310                     _putch:
   746                           	opt stack 27
   747                           
   748                           ;incstack = 0
   749                           ;putch@c stored from wreg
   750  001310  6E14               	movwf	putch@c,c
   751  001312                     l122:
   752  001312  A8A4               	btfss	4004,4,c	;volatile
   753  001314  D7FE               	goto	l122
   754                           
   755                           ;bitbang.c: 366: TX2REG = c;
   756  001316  C014  FF73         	movff	putch@c,3955	;volatile
   757  00131A  0012               	return		;funcret
   758  00131C                     __end_of_putch:
   759                           	opt stack 0
   760                           tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           tblptrl	equ	0xFF6
   763                           tablat	equ	0xFF5
   764                           postinc0	equ	0xFEE
   765                           wreg	equ	0xFE8
   766                           indf2	equ	0xFDF
   767                           fsr2h	equ	0xFDA
   768                           fsr2l	equ	0xFD9
   769                           status	equ	0xFD8
   770                           
   771 ;; *************** function _INIT_PIC *****************
   772 ;; Defined at:
   773 ;;		line 164 in file "bitbang.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;		None               void
   780 ;; Registers used:
   781 ;;		wreg, status,2
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    2
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text3
   802  001294                     __ptext3:
   803                           	opt stack 0
   804  001294                     _INIT_PIC:
   805                           	opt stack 28
   806                           
   807                           ;bitbang.c: 166: OSCCONbits.IRCF2 = 1;
   808                           
   809                           ;incstack = 0
   810  001294  8CD3               	bsf	4051,6,c	;volatile
   811                           
   812                           ;bitbang.c: 167: OSCCONbits.IRCF1 = 1;
   813  001296  8AD3               	bsf	4051,5,c	;volatile
   814                           
   815                           ;bitbang.c: 168: OSCCONbits.IRCF0 = 1;
   816  001298  88D3               	bsf	4051,4,c	;volatile
   817                           
   818                           ;bitbang.c: 169: OSCTUNEbits.PLLEN = 1;
   819  00129A  8C9B               	bsf	3995,6,c	;volatile
   820                           
   821                           ;bitbang.c: 175: TXSTA2bits.TXEN = 1;
   822  00129C  8A72               	bsf	3954,5,c	;volatile
   823                           
   824                           ;bitbang.c: 176: TXSTA2bits.SYNC = 0;
   825  00129E  9872               	bcf	3954,4,c	;volatile
   826                           
   827                           ;bitbang.c: 177: TXSTA2bits.BRGH = 0;
   828  0012A0  9472               	bcf	3954,2,c	;volatile
   829                           
   830                           ;bitbang.c: 178: BAUDCON2bits.BRG16 = 0;
   831  0012A2  9670               	bcf	3952,3,c	;volatile
   832                           
   833                           ;bitbang.c: 179: RCSTA2bits.CREN = 1;
   834  0012A4  8871               	bsf	3953,4,c	;volatile
   835                           
   836                           ;bitbang.c: 180: SPBRG2 = 104;
   837  0012A6  0E68               	movlw	104
   838  0012A8  6E75               	movwf	3957,c	;volatile
   839                           
   840                           ;bitbang.c: 181: RCSTA2bits.SPEN = 1;
   841  0012AA  8E71               	bsf	3953,7,c	;volatile
   842                           
   843                           ;bitbang.c: 184: TRISCbits.TRISC1 = 0;
   844  0012AC  9294               	bcf	3988,1,c	;volatile
   845                           
   846                           ;bitbang.c: 185: TRISAbits.TRISA0 = 0;
   847  0012AE  9092               	bcf	3986,0,c	;volatile
   848                           
   849                           ;bitbang.c: 186: TRISAbits.TRISA1 = 0;
   850  0012B0  9292               	bcf	3986,1,c	;volatile
   851                           
   852                           ;bitbang.c: 187: TRISAbits.TRISA2 = 0;
   853  0012B2  9492               	bcf	3986,2,c	;volatile
   854                           
   855                           ;bitbang.c: 188: TRISAbits.TRISA3 = 0;
   856  0012B4  9692               	bcf	3986,3,c	;volatile
   857                           
   858                           ;bitbang.c: 191: T0CON = 0;
   859  0012B6  0E00               	movlw	0
   860  0012B8  6ED5               	movwf	4053,c	;volatile
   861                           
   862                           ;bitbang.c: 192: TMR0L = 0;
   863  0012BA  0E00               	movlw	0
   864  0012BC  6ED6               	movwf	4054,c	;volatile
   865                           
   866                           ;bitbang.c: 193: T0CONbits.PSA = 0;
   867  0012BE  96D5               	bcf	4053,3,c	;volatile
   868                           
   869                           ;bitbang.c: 194: T0CONbits.T0PS2 = 0;
   870  0012C0  94D5               	bcf	4053,2,c	;volatile
   871                           
   872                           ;bitbang.c: 195: T0CONbits.T0PS1 = 1;
   873  0012C2  82D5               	bsf	4053,1,c	;volatile
   874                           
   875                           ;bitbang.c: 196: T0CONbits.T0PS0 = 0;
   876  0012C4  90D5               	bcf	4053,0,c	;volatile
   877                           
   878                           ;bitbang.c: 197: T0CONbits.T08BIT = 0;
   879  0012C6  9CD5               	bcf	4053,6,c	;volatile
   880                           
   881                           ;bitbang.c: 198: T0CONbits.TMR0ON = 1;
   882  0012C8  8ED5               	bsf	4053,7,c	;volatile
   883                           
   884                           ;bitbang.c: 199: TMR0 = 36000;
   885  0012CA  0E8C               	movlw	140
   886  0012CC  6ED7               	movwf	4055,c	;volatile
   887  0012CE  0EA0               	movlw	160
   888  0012D0  6ED6               	movwf	4054,c	;volatile
   889                           
   890                           ;bitbang.c: 201: T1CONbits.TMR1ON = 0;
   891  0012D2  90CD               	bcf	4045,0,c	;volatile
   892                           
   893                           ;bitbang.c: 202: T1CONbits.T1CKPS0 = 1;
   894  0012D4  88CD               	bsf	4045,4,c	;volatile
   895                           
   896                           ;bitbang.c: 203: T1CONbits.T1CKPS1 = 1;
   897  0012D6  8ACD               	bsf	4045,5,c	;volatile
   898                           
   899                           ;bitbang.c: 204: PIE1bits.TMR1IE = 0;
   900  0012D8  909D               	bcf	3997,0,c	;volatile
   901                           
   902                           ;bitbang.c: 205: T1CONbits.TMR1ON = 1;
   903  0012DA  80CD               	bsf	4045,0,c	;volatile
   904                           
   905                           ;bitbang.c: 208: INTCONbits.TMR0IF = 0;
   906  0012DC  94F2               	bcf	intcon,2,c	;volatile
   907                           
   908                           ;bitbang.c: 209: INTCONbits.TMR0IE = 1;
   909  0012DE  8AF2               	bsf	intcon,5,c	;volatile
   910                           
   911                           ;bitbang.c: 211: INTCONbits.GIE = 1;
   912  0012E0  8EF2               	bsf	intcon,7,c	;volatile
   913  0012E2  0012               	return		;funcret
   914  0012E4                     __end_of_INIT_PIC:
   915                           	opt stack 0
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           intcon	equ	0xFF2
   921                           postinc0	equ	0xFEE
   922                           wreg	equ	0xFE8
   923                           indf2	equ	0xFDF
   924                           fsr2h	equ	0xFDA
   925                           fsr2l	equ	0xFD9
   926                           status	equ	0xFD8
   927                           
   928 ;; *************** function _ISR *****************
   929 ;; Defined at:
   930 ;;		line 296 in file "bitbang.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  i               2   17[COMRAM] int 
   935 ;; Return value:  Size  Location     Type
   936 ;;		None               void
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;Total ram usage:       19 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    1
   951 ;; This function calls:
   952 ;;		_direction_routine
   953 ;; This function is called by:
   954 ;;		Interrupt level 2
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	intcode
   959  000008                     __pintcode:
   960                           	opt stack 0
   961  000008                     _ISR:
   962                           	opt stack 27
   963                           
   964                           ;incstack = 0
   965  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   966  00000A  CFFA F004          	movff	pclath,??_ISR+3
   967  00000E  CFFB F005          	movff	pclatu,??_ISR+4
   968  000012  CFE9 F006          	movff	fsr0l,??_ISR+5
   969  000016  CFEA F007          	movff	fsr0h,??_ISR+6
   970  00001A  CFE1 F008          	movff	fsr1l,??_ISR+7
   971  00001E  CFE2 F009          	movff	fsr1h,??_ISR+8
   972  000022  CFD9 F00A          	movff	fsr2l,??_ISR+9
   973  000026  CFDA F00B          	movff	fsr2h,??_ISR+10
   974  00002A  CFF3 F00C          	movff	prodl,??_ISR+11
   975  00002E  CFF4 F00D          	movff	prodh,??_ISR+12
   976  000032  CFF6 F00E          	movff	tblptrl,??_ISR+13
   977  000036  CFF7 F00F          	movff	tblptrh,??_ISR+14
   978  00003A  CFF8 F010          	movff	tblptru,??_ISR+15
   979  00003E  CFF5 F011          	movff	tablat,??_ISR+16
   980                           
   981                           ;bitbang.c: 298: INTCONbits.TMR0IF = 0;
   982  000042  94F2               	bcf	intcon,2,c	;volatile
   983                           
   984                           ;bitbang.c: 299: LATCbits.LATC1 ^ = 1;
   985  000044  728B               	btg	3979,1,c	;volatile
   986                           
   987                           ;bitbang.c: 303: LATAbits.LATA0 = 1;
   988  000046  8089               	bsf	3977,0,c	;volatile
   989                           
   990                           ;bitbang.c: 304: LATAbits.LATA1 = 1;
   991  000048  8289               	bsf	3977,1,c	;volatile
   992                           
   993                           ;bitbang.c: 305: LATAbits.LATA2 = 1;
   994  00004A  8489               	bsf	3977,2,c	;volatile
   995                           
   996                           ;bitbang.c: 306: LATAbits.LATA3 = 1;
   997  00004C  8689               	bsf	3977,3,c	;volatile
   998                           
   999                           ;bitbang.c: 310: TMR1 = 63536;
  1000  00004E  0EF8               	movlw	248
  1001  000050  6ECF               	movwf	4047,c	;volatile
  1002  000052  0E30               	movlw	48
  1003  000054  6ECE               	movwf	4046,c	;volatile
  1004  000056                     i2l100:
  1005  000056  A09E               	btfss	3998,0,c	;volatile
  1006  000058  D7FE               	goto	i2l100
  1007                           
  1008                           ;bitbang.c: 312: PIR1bits.TMR1IF = 0;
  1009  00005A  909E               	bcf	3998,0,c	;volatile
  1010                           
  1011                           ;bitbang.c: 315: for (int i = 0; i < 180; i++) {
  1012  00005C  0E00               	movlw	0
  1013  00005E  6E13               	movwf	ISR@i+1,c
  1014  000060  0E00               	movlw	0
  1015  000062  6E12               	movwf	ISR@i,c
  1016  000064                     i2l898:
  1017  000064  BE13               	btfsc	ISR@i+1,7,c
  1018  000066  D006               	goto	i2l902
  1019  000068  5013               	movf	ISR@i+1,w,c
  1020  00006A  E14F               	bnz	i2l924
  1021  00006C  0EB4               	movlw	180
  1022  00006E  5C12               	subwf	ISR@i,w,c
  1023  000070  B0D8               	btfsc	status,0,c
  1024  000072  D04B               	goto	i2l924
  1025  000074                     i2l902:
  1026                           
  1027                           ;bitbang.c: 319: if (duty_cycle[0] < i)
  1028  000074  501D               	movf	_duty_cycle,w,c
  1029  000076  6E01               	movwf	??_ISR& (0+255),c
  1030  000078  6A02               	clrf	(??_ISR+1)& (0+255),c
  1031  00007A  5012               	movf	ISR@i,w,c
  1032  00007C  5C01               	subwf	??_ISR,w,c
  1033  00007E  5002               	movf	??_ISR+1,w,c
  1034  000080  0A80               	xorlw	128
  1035  000082  6E03               	movwf	(??_ISR+2)& (0+255),c
  1036  000084  5013               	movf	ISR@i+1,w,c
  1037  000086  0A80               	xorlw	128
  1038  000088  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1039  00008A  B0D8               	btfsc	status,0,c
  1040  00008C  D002               	goto	i2l105
  1041                           
  1042                           ;bitbang.c: 320: LATAbits.LATA0 = 0;
  1043  00008E  9089               	bcf	3977,0,c	;volatile
  1044  000090  D001               	goto	i2l906
  1045  000092                     i2l105:
  1046                           
  1047                           ;bitbang.c: 321: else LATAbits.LATA0 = 1;
  1048  000092  8089               	bsf	3977,0,c	;volatile
  1049  000094                     i2l906:
  1050                           
  1051                           ;bitbang.c: 323: if (duty_cycle[1] < i)
  1052  000094  501E               	movf	_duty_cycle+1,w,c
  1053  000096  6E01               	movwf	??_ISR& (0+255),c
  1054  000098  6A02               	clrf	(??_ISR+1)& (0+255),c
  1055  00009A  5012               	movf	ISR@i,w,c
  1056  00009C  5C01               	subwf	??_ISR,w,c
  1057  00009E  5002               	movf	??_ISR+1,w,c
  1058  0000A0  0A80               	xorlw	128
  1059  0000A2  6E03               	movwf	(??_ISR+2)& (0+255),c
  1060  0000A4  5013               	movf	ISR@i+1,w,c
  1061  0000A6  0A80               	xorlw	128
  1062  0000A8  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1063  0000AA  B0D8               	btfsc	status,0,c
  1064  0000AC  D002               	goto	i2l107
  1065                           
  1066                           ;bitbang.c: 324: LATAbits.LATA1 = 0;
  1067  0000AE  9289               	bcf	3977,1,c	;volatile
  1068  0000B0  D001               	goto	i2l910
  1069  0000B2                     i2l107:
  1070                           
  1071                           ;bitbang.c: 325: else LATAbits.LATA1 = 1;
  1072  0000B2  8289               	bsf	3977,1,c	;volatile
  1073  0000B4                     i2l910:
  1074                           
  1075                           ;bitbang.c: 327: if (duty_cycle[2] < i)
  1076  0000B4  501F               	movf	_duty_cycle+2,w,c
  1077  0000B6  6E01               	movwf	??_ISR& (0+255),c
  1078  0000B8  6A02               	clrf	(??_ISR+1)& (0+255),c
  1079  0000BA  5012               	movf	ISR@i,w,c
  1080  0000BC  5C01               	subwf	??_ISR,w,c
  1081  0000BE  5002               	movf	??_ISR+1,w,c
  1082  0000C0  0A80               	xorlw	128
  1083  0000C2  6E03               	movwf	(??_ISR+2)& (0+255),c
  1084  0000C4  5013               	movf	ISR@i+1,w,c
  1085  0000C6  0A80               	xorlw	128
  1086  0000C8  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1087  0000CA  B0D8               	btfsc	status,0,c
  1088  0000CC  D002               	goto	i2l109
  1089                           
  1090                           ;bitbang.c: 328: LATAbits.LATA2 = 0;
  1091  0000CE  9489               	bcf	3977,2,c	;volatile
  1092  0000D0  D001               	goto	i2l914
  1093  0000D2                     i2l109:
  1094                           
  1095                           ;bitbang.c: 329: else LATAbits.LATA2 = 1;
  1096  0000D2  8489               	bsf	3977,2,c	;volatile
  1097  0000D4                     i2l914:
  1098                           
  1099                           ;bitbang.c: 331: if (duty_cycle[3] < i)
  1100  0000D4  5020               	movf	_duty_cycle+3,w,c
  1101  0000D6  6E01               	movwf	??_ISR& (0+255),c
  1102  0000D8  6A02               	clrf	(??_ISR+1)& (0+255),c
  1103  0000DA  5012               	movf	ISR@i,w,c
  1104  0000DC  5C01               	subwf	??_ISR,w,c
  1105  0000DE  5002               	movf	??_ISR+1,w,c
  1106  0000E0  0A80               	xorlw	128
  1107  0000E2  6E03               	movwf	(??_ISR+2)& (0+255),c
  1108  0000E4  5013               	movf	ISR@i+1,w,c
  1109  0000E6  0A80               	xorlw	128
  1110  0000E8  5803               	subwfb	(??_ISR+2)& (0+255),w,c
  1111  0000EA  B0D8               	btfsc	status,0,c
  1112  0000EC  D002               	goto	i2l111
  1113                           
  1114                           ;bitbang.c: 332: LATAbits.LATA3 = 0;
  1115  0000EE  9689               	bcf	3977,3,c	;volatile
  1116  0000F0  D001               	goto	i2l112
  1117  0000F2                     i2l111:
  1118                           
  1119                           ;bitbang.c: 333: else LATAbits.LATA3 = 1;
  1120  0000F2  8689               	bsf	3977,3,c	;volatile
  1121  0000F4                     i2l112:
  1122                           
  1123                           ;bitbang.c: 336: PIR1bits.TMR1IF = 0;
  1124  0000F4  909E               	bcf	3998,0,c	;volatile
  1125                           
  1126                           ;bitbang.c: 337: TMR1 = 65525;
  1127  0000F6  0EFF               	movlw	255
  1128  0000F8  6ECF               	movwf	4047,c	;volatile
  1129  0000FA  0EF5               	movlw	245
  1130  0000FC  6ECE               	movwf	4046,c	;volatile
  1131  0000FE                     i2l113:
  1132  0000FE  A09E               	btfss	3998,0,c	;volatile
  1133  000100  D7FE               	goto	i2l113
  1134                           
  1135                           ;bitbang.c: 339: PIR1bits.TMR1IF = 0;
  1136  000102  909E               	bcf	3998,0,c	;volatile
  1137  000104  4A12               	infsnz	ISR@i,f,c
  1138  000106  2A13               	incf	ISR@i+1,f,c
  1139  000108  D7AD               	goto	i2l898
  1140  00010A                     i2l924:
  1141                           
  1142                           ;bitbang.c: 340: }
  1143                           ;bitbang.c: 342: LATCbits.LATC1 ^= 1;
  1144  00010A  728B               	btg	3979,1,c	;volatile
  1145                           
  1146                           ;bitbang.c: 343: TMR0 = 36000;
  1147  00010C  0E8C               	movlw	140
  1148  00010E  6ED7               	movwf	4055,c	;volatile
  1149  000110  0EA0               	movlw	160
  1150  000112  6ED6               	movwf	4054,c	;volatile
  1151                           
  1152                           ;bitbang.c: 346: counter++;
  1153  000114  2A25               	incf	_counter,f,c
  1154                           
  1155                           ;bitbang.c: 347: if (counter >= 100) {
  1156  000116  0E63               	movlw	99
  1157  000118  6425               	cpfsgt	_counter,c
  1158  00011A  D00B               	goto	i2l119
  1159                           
  1160                           ;bitbang.c: 349: counter = 0;
  1161  00011C  0E00               	movlw	0
  1162  00011E  6E25               	movwf	_counter,c
  1163                           
  1164                           ;bitbang.c: 351: if(direction_change == 1){direction_change = 0;}
  1165  000120  0426               	decf	_direction_change,w,c
  1166  000122  A4D8               	btfss	status,2,c
  1167  000124  D002               	goto	i2l938
  1168  000126  0E00               	movlw	0
  1169  000128  D001               	goto	L1
  1170  00012A                     i2l938:
  1171                           
  1172                           ;bitbang.c: 352: else {direction_change = 1;}
  1173  00012A  0E01               	movlw	1
  1174  00012C                     L1:
  1175  00012C  6E26               	movwf	_direction_change,c
  1176                           
  1177                           ;bitbang.c: 353: direction_routine();
  1178  00012E  ECB1  F008         	call	_direction_routine	;wreg free
  1179  000132                     i2l119:
  1180  000132  C011  FFF5         	movff	??_ISR+16,tablat
  1181  000136  C010  FFF8         	movff	??_ISR+15,tblptru
  1182  00013A  C00F  FFF7         	movff	??_ISR+14,tblptrh
  1183  00013E  C00E  FFF6         	movff	??_ISR+13,tblptrl
  1184  000142  C00D  FFF4         	movff	??_ISR+12,prodh
  1185  000146  C00C  FFF3         	movff	??_ISR+11,prodl
  1186  00014A  C00B  FFDA         	movff	??_ISR+10,fsr2h
  1187  00014E  C00A  FFD9         	movff	??_ISR+9,fsr2l
  1188  000152  C009  FFE2         	movff	??_ISR+8,fsr1h
  1189  000156  C008  FFE1         	movff	??_ISR+7,fsr1l
  1190  00015A  C007  FFEA         	movff	??_ISR+6,fsr0h
  1191  00015E  C006  FFE9         	movff	??_ISR+5,fsr0l
  1192  000162  C005  FFFB         	movff	??_ISR+4,pclatu
  1193  000166  C004  FFFA         	movff	??_ISR+3,pclath
  1194  00016A  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1195  00016C  0011               	retfie		f
  1196  00016E                     __end_of_ISR:
  1197                           	opt stack 0
  1198                           pclatu	equ	0xFFB
  1199                           pclath	equ	0xFFA
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           prodh	equ	0xFF4
  1205                           prodl	equ	0xFF3
  1206                           intcon	equ	0xFF2
  1207                           postinc0	equ	0xFEE
  1208                           fsr0h	equ	0xFEA
  1209                           fsr0l	equ	0xFE9
  1210                           wreg	equ	0xFE8
  1211                           fsr1h	equ	0xFE2
  1212                           fsr1l	equ	0xFE1
  1213                           indf2	equ	0xFDF
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _direction_routine *****************
  1219 ;; Defined at:
  1220 ;;		line 220 in file "bitbang.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;		None               void
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_ISR
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text5
  1248  001162                     __ptext5:
  1249                           	opt stack 0
  1250  001162                     _direction_routine:
  1251                           	opt stack 27
  1252                           
  1253                           ;bitbang.c: 222: switch (direction) {
  1254                           
  1255                           ;incstack = 0
  1256  001162  D04E               	goto	i2l846
  1257  001164                     i2l828:
  1258                           
  1259                           ;bitbang.c: 229: if (direction_change == 0) {
  1260  001164  5026               	movf	_direction_change,w,c
  1261  001166  A4D8               	btfss	status,2,c
  1262  001168  D008               	goto	i2l832
  1263                           
  1264                           ;bitbang.c: 230: duty_cycle[0] = 180;
  1265  00116A  0EB4               	movlw	180
  1266  00116C  6E1D               	movwf	_duty_cycle,c
  1267                           
  1268                           ;bitbang.c: 231: duty_cycle[1] = 180;
  1269  00116E  0EB4               	movlw	180
  1270  001170  6E1E               	movwf	_duty_cycle+1,c
  1271                           
  1272                           ;bitbang.c: 232: duty_cycle[2] = 180;
  1273  001172  0EB4               	movlw	180
  1274  001174  6E1F               	movwf	_duty_cycle+2,c
  1275                           
  1276                           ;bitbang.c: 233: duty_cycle[3] = 180;
  1277  001176  0EB4               	movlw	180
  1278  001178  D007               	goto	L2
  1279  00117A                     i2l832:
  1280                           
  1281                           ;bitbang.c: 235: duty_cycle[0] = 0;
  1282  00117A  0E00               	movlw	0
  1283  00117C  6E1D               	movwf	_duty_cycle,c
  1284                           
  1285                           ;bitbang.c: 236: duty_cycle[1] = 0;
  1286  00117E  0E00               	movlw	0
  1287  001180  6E1E               	movwf	_duty_cycle+1,c
  1288                           
  1289                           ;bitbang.c: 237: duty_cycle[2] = 0;
  1290  001182  0E00               	movlw	0
  1291  001184  6E1F               	movwf	_duty_cycle+2,c
  1292                           
  1293                           ;bitbang.c: 238: duty_cycle[3] = 0;
  1294  001186  0E00               	movlw	0
  1295  001188                     L2:
  1296  001188  6E20               	movwf	_duty_cycle+3,c
  1297  00118A                     i2l87:
  1298                           
  1299                           ;bitbang.c: 246: if (direction_change == 0) {
  1300  00118A  5026               	movf	_direction_change,w,c
  1301  00118C  A4D8               	btfss	status,2,c
  1302  00118E  D008               	goto	i2l836
  1303                           
  1304                           ;bitbang.c: 247: duty_cycle[0] = 180;
  1305  001190  0EB4               	movlw	180
  1306  001192  6E1D               	movwf	_duty_cycle,c
  1307                           
  1308                           ;bitbang.c: 248: duty_cycle[1] = 45;
  1309  001194  0E2D               	movlw	45
  1310  001196  6E1E               	movwf	_duty_cycle+1,c
  1311                           
  1312                           ;bitbang.c: 249: duty_cycle[2] = 180;
  1313  001198  0EB4               	movlw	180
  1314  00119A  6E1F               	movwf	_duty_cycle+2,c
  1315                           
  1316                           ;bitbang.c: 250: duty_cycle[3] = 45;
  1317  00119C  0E2D               	movlw	45
  1318  00119E  D007               	goto	L3
  1319  0011A0                     i2l836:
  1320                           
  1321                           ;bitbang.c: 252: duty_cycle[0] = 45;
  1322  0011A0  0E2D               	movlw	45
  1323  0011A2  6E1D               	movwf	_duty_cycle,c
  1324                           
  1325                           ;bitbang.c: 253: duty_cycle[1] = 180;
  1326  0011A4  0EB4               	movlw	180
  1327  0011A6  6E1E               	movwf	_duty_cycle+1,c
  1328                           
  1329                           ;bitbang.c: 254: duty_cycle[2] = 45;
  1330  0011A8  0E2D               	movlw	45
  1331  0011AA  6E1F               	movwf	_duty_cycle+2,c
  1332                           
  1333                           ;bitbang.c: 255: duty_cycle[3] = 180;
  1334  0011AC  0EB4               	movlw	180
  1335  0011AE                     L3:
  1336  0011AE  6E20               	movwf	_duty_cycle+3,c
  1337  0011B0                     i2l90:
  1338                           
  1339                           ;bitbang.c: 262: if (direction_change == 0) {
  1340  0011B0  5026               	movf	_direction_change,w,c
  1341  0011B2  A4D8               	btfss	status,2,c
  1342  0011B4  D008               	goto	i2l840
  1343                           
  1344                           ;bitbang.c: 263: duty_cycle[0] = 180;
  1345  0011B6  0EB4               	movlw	180
  1346  0011B8  6E1D               	movwf	_duty_cycle,c
  1347                           
  1348                           ;bitbang.c: 264: duty_cycle[1] = 45;
  1349  0011BA  0E2D               	movlw	45
  1350  0011BC  6E1E               	movwf	_duty_cycle+1,c
  1351                           
  1352                           ;bitbang.c: 265: duty_cycle[2] = 180;
  1353  0011BE  0EB4               	movlw	180
  1354  0011C0  6E1F               	movwf	_duty_cycle+2,c
  1355                           
  1356                           ;bitbang.c: 266: duty_cycle[3] = 45;
  1357  0011C2  0E2D               	movlw	45
  1358  0011C4  D007               	goto	L4
  1359  0011C6                     i2l840:
  1360                           
  1361                           ;bitbang.c: 268: duty_cycle[0] = 45;
  1362  0011C6  0E2D               	movlw	45
  1363  0011C8  6E1D               	movwf	_duty_cycle,c
  1364                           
  1365                           ;bitbang.c: 269: duty_cycle[1] = 180;
  1366  0011CA  0EB4               	movlw	180
  1367  0011CC  6E1E               	movwf	_duty_cycle+1,c
  1368                           
  1369                           ;bitbang.c: 270: duty_cycle[2] = 45;
  1370  0011CE  0E2D               	movlw	45
  1371  0011D0  6E1F               	movwf	_duty_cycle+2,c
  1372                           
  1373                           ;bitbang.c: 271: duty_cycle[3] = 180;
  1374  0011D2  0EB4               	movlw	180
  1375  0011D4                     L4:
  1376  0011D4  6E20               	movwf	_duty_cycle+3,c
  1377  0011D6                     i2l93:
  1378                           
  1379                           ;bitbang.c: 277: if (direction_change == 0) {
  1380  0011D6  5026               	movf	_direction_change,w,c
  1381  0011D8  A4D8               	btfss	status,2,c
  1382  0011DA  D009               	goto	i2l844
  1383                           
  1384                           ;bitbang.c: 278: duty_cycle[0] = 180;
  1385  0011DC  0EB4               	movlw	180
  1386  0011DE  6E1D               	movwf	_duty_cycle,c
  1387                           
  1388                           ;bitbang.c: 279: duty_cycle[1] = 45;
  1389  0011E0  0E2D               	movlw	45
  1390  0011E2  6E1E               	movwf	_duty_cycle+1,c
  1391                           
  1392                           ;bitbang.c: 280: duty_cycle[2] = 180;
  1393  0011E4  0EB4               	movlw	180
  1394  0011E6  6E1F               	movwf	_duty_cycle+2,c
  1395                           
  1396                           ;bitbang.c: 281: duty_cycle[3] = 45;
  1397  0011E8  0E2D               	movlw	45
  1398  0011EA  6E20               	movwf	_duty_cycle+3,c
  1399                           
  1400                           ;bitbang.c: 282: } else {
  1401  0011EC  0012               	return	
  1402  0011EE                     i2l844:
  1403                           
  1404                           ;bitbang.c: 283: duty_cycle[0] = 45;
  1405  0011EE  0E2D               	movlw	45
  1406  0011F0  6E1D               	movwf	_duty_cycle,c
  1407                           
  1408                           ;bitbang.c: 284: duty_cycle[1] = 180;
  1409  0011F2  0EB4               	movlw	180
  1410  0011F4  6E1E               	movwf	_duty_cycle+1,c
  1411                           
  1412                           ;bitbang.c: 285: duty_cycle[2] = 45;
  1413  0011F6  0E2D               	movlw	45
  1414  0011F8  6E1F               	movwf	_duty_cycle+2,c
  1415                           
  1416                           ;bitbang.c: 286: duty_cycle[3] = 180;
  1417  0011FA  0EB4               	movlw	180
  1418  0011FC  6E20               	movwf	_duty_cycle+3,c
  1419                           
  1420                           ;bitbang.c: 287: }
  1421                           ;bitbang.c: 289: }
  1422  0011FE  0012               	return	
  1423  001200                     i2l846:
  1424  001200  5027               	movf	_direction,w,c
  1425                           
  1426                           ; Switch size 1, requested type "space"
  1427                           ; Number of cases is 4, Range of values is 98 to 114
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; simple_byte           13     7 (average)
  1431                           ;	Chosen strategy is simple_byte
  1432  001202  0A62               	xorlw	98	; case 98
  1433  001204  B4D8               	btfsc	status,2,c
  1434  001206  D7E7               	goto	i2l93
  1435  001208  0A04               	xorlw	4	; case 102
  1436  00120A  B4D8               	btfsc	status,2,c
  1437  00120C  D7AB               	goto	i2l828
  1438  00120E  0A0A               	xorlw	10	; case 108
  1439  001210  B4D8               	btfsc	status,2,c
  1440  001212  D7CE               	goto	i2l90
  1441  001214  0A1E               	xorlw	30	; case 114
  1442  001216  A4D8               	btfss	status,2,c
  1443  001218  0012               	return	
  1444  00121A  D7B7               	goto	i2l87
  1445  00121C                     __end_of_direction_routine:
  1446                           	opt stack 0
  1447                           pclatu	equ	0xFFB
  1448                           pclath	equ	0xFFA
  1449                           tblptru	equ	0xFF8
  1450                           tblptrh	equ	0xFF7
  1451                           tblptrl	equ	0xFF6
  1452                           tablat	equ	0xFF5
  1453                           prodh	equ	0xFF4
  1454                           prodl	equ	0xFF3
  1455                           intcon	equ	0xFF2
  1456                           postinc0	equ	0xFEE
  1457                           fsr0h	equ	0xFEA
  1458                           fsr0l	equ	0xFE9
  1459                           wreg	equ	0xFE8
  1460                           fsr1h	equ	0xFE2
  1461                           fsr1l	equ	0xFE1
  1462                           indf2	equ	0xFDF
  1463                           fsr2h	equ	0xFDA
  1464                           fsr2l	equ	0xFD9
  1465                           status	equ	0xFD8
  1466                           pclatu	equ	0xFFB
  1467                           pclath	equ	0xFFA
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           fsr0h	equ	0xFEA
  1477                           fsr0l	equ	0xFE9
  1478                           wreg	equ	0xFE8
  1479                           fsr1h	equ	0xFE2
  1480                           fsr1l	equ	0xFE1
  1481                           indf2	equ	0xFDF
  1482                           fsr2h	equ	0xFDA
  1483                           fsr2l	equ	0xFD9
  1484                           status	equ	0xFD8
  1485                           
  1486                           	psect	rparam
  1487  0000                     pclatu	equ	0xFFB
  1488                           pclath	equ	0xFFA
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           prodh	equ	0xFF4
  1494                           prodl	equ	0xFF3
  1495                           intcon	equ	0xFF2
  1496                           postinc0	equ	0xFEE
  1497                           fsr0h	equ	0xFEA
  1498                           fsr0l	equ	0xFE9
  1499                           wreg	equ	0xFE8
  1500                           fsr1h	equ	0xFE2
  1501                           fsr1l	equ	0xFE1
  1502                           indf2	equ	0xFDF
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8
  1506                           
  1507                           	psect	temp
  1508  000028                     btemp:
  1509                           	opt stack 0
  1510  000028                     	ds	1
  1511  0000                     int$flags	set	btemp
  1512                           pclatu	equ	0xFFB
  1513                           pclath	equ	0xFFA
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           prodh	equ	0xFF4
  1519                           prodl	equ	0xFF3
  1520                           intcon	equ	0xFF2
  1521                           postinc0	equ	0xFEE
  1522                           fsr0h	equ	0xFEA
  1523                           fsr0l	equ	0xFE9
  1524                           wreg	equ	0xFE8
  1525                           fsr1h	equ	0xFE2
  1526                           fsr1l	equ	0xFE1
  1527                           indf2	equ	0xFDF
  1528                           fsr2h	equ	0xFDA
  1529                           fsr2l	equ	0xFD9
  1530                           status	equ	0xFD8


Data Sizes:
    Strings     140
    Constant    0
    Data        1
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_10(CODE[3]), STR_9(CODE[17]), STR_8(CODE[20]), STR_7(CODE[19]), 
		 -> STR_6(CODE[19]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[15]), 
		 -> STR_2(CODE[32]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     793
                           _INIT_PIC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     793
                                             20 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INIT_PIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 19    19      0      90
                                              0 COMRAM    19    19      0
                  _direction_routine
 ---------------------------------------------------------------------------------
 (4) _direction_routine                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_PIC
   _printf
     _putch

 _ISR (ROOT)
   _direction_routine

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      27       1       41.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      12        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Apr 10 14:38:44 2016

                        l71 1106                         l122 1312                         l950 123C  
                       l944 1226                         l960 127A                         l954 1250  
                       l948 1236                         l980 10EA                         l972 10A2  
                       l958 1258                         l984 10FA                         l976 10AA  
                       l992 1138                         l978 10DC                         l994 1154  
                       l988 1124                         _ISR 0008                         wreg 000FE8  
                _TXSTA2bits 000F72                __CFG_LVP$OFF 000000                        ?_ISR 0001  
                      ISR@i 0012                        STR_1 101E                        STR_2 1001  
                      STR_3 106C                        STR_4 1083                        STR_5 107B  
                      STR_6 1048                        STR_7 1035                        STR_8 1021  
                      STR_9 105B               __CFG_DEBUG$ON 000000                        i2l90 11B0  
                      i2l93 11D6                        i2l87 118A                        _TMR0 000FD6  
                      _TMR1 000FCE                __CFG_WDTPS$1 000000  __size_of_direction_routine 00BA  
                      _main 108E                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        btemp 0028  
             __CFG_BORV$285 000000                        pclat 000FFA                        prodh 000FF4  
                      prodl 000FF3                        start 016E               __CFG_IESO$OFF 000000  
              ___param_bank 000010                       ??_ISR 0001                _BAUDCON2bits 000F70  
          __end_of_INIT_PIC 12E4                       ?_main 0001                       STR_10 108A  
                     _T0CON 000FD5                       i2l100 0056                       i2l111 00F2  
                     i2l112 00F4                       i2l113 00FE                       i2l105 0092  
                     i2l107 00B2                       i2l109 00D2                       i2l119 0132  
                     i2l910 00B4                       i2l902 0074                       i2l840 11C6  
                     i2l832 117A                       i2l914 00D4                       i2l906 0094  
                     i2l844 11EE                       i2l836 11A0                       i2l828 1164  
                     i2l924 010A                       i2l846 1200                       i2l938 012A  
                     i2l898 0064                       _TMR0L 000FD6                       _TX2IF 007D24  
            __CFG_FCMEN$OFF 000000          __CFG_MCLRE$EXTMCLR 000000                       _putch 1310  
            __CFG_BOREN$OFF 000000                       tablat 000FF5                       status 000FD8  
           __initialization 12E4                __end_of_main 1162                      ??_main 001D  
             __activetblptr 000002              __CFG_PLLCFG$ON 000000                      ?_putch 0001  
            __CFG_WDTEN$OFF 000000                      _RCREG2 000F74                      _SPBRG2 000F75  
                    _TX2REG 000F73              __CFG_PWRTEN$ON 000000              __CFG_XINST$OFF 000000  
                    clear_0 12EA                      _printf 121C                __pdataCOMRAM 0027  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                      putch@c 0014             __CFG_HFOFST$OFF 000000  
                __accesstop 0060     __end_of__initialization 1302             __CFG_PBADEN$OFF 000000  
                 ?_INIT_PIC 0001               ___rparam_used 000001              __pcstackCOMRAM 0001  
             __end_of_putch 131C                     ??_putch 0014                  ??_INIT_PIC 0014  
        __CFG_CCP2MX$PORTC1 000000          __CFG_CCP3MX$PORTB5 000000                     ?_printf 0015  
         __CFG_PRICLKEN$OFF 000000                     __Hparam 0000                     __Lparam 0000  
              __psmallconst 1000             __CFG_STVREN$OFF 000000                     __pcinit 12E4  
                   __ramtop 1000                     __ptext0 108E                     __ptext1 121C  
                   __ptext2 1310                     __ptext3 1294                     __ptext5 1162  
           __size_of_printf 0078                   _T0CONbits 000FD5                __size_of_ISR 0166  
                 _T1CONbits 000FCD                     _counter 0025                  _duty_cycle 001D  
      end_of_initialization 1302               __Lmediumconst 0000                     printf@c 001C  
                   printf@f 0015                     postinc0 000FEE                   _TRISAbits 000F92  
                 _TRISCbits 000F94           __size_of_INIT_PIC 0050               __pidataCOMRAM 131C  
            __end_of_printf 1294         start_initialization 12E4                 __end_of_ISR 016E  
                  ??_printf 0019                 __pbssCOMRAM 001D                   __pintcode 0008  
                 _direction 0027                 __smallconst 1000              __size_of_putch 000C  
                  _LATAbits 000F89                    _LATCbits 000F8B                    _INIT_PIC 1294  
                  _PIE1bits 000F9D                    _PIR1bits 000F9E                    _PIR3bits 000FA4  
                printf@flag 0019                    __Hrparam 0000                    __Lrparam 0000  
         __CFG_P2BMX$PORTC0 000000               __size_of_main 00D4           _direction_routine 1162  
        ?_direction_routine 0001                    int$flags 0028         ??_direction_routine 0001  
               _OSCTUNEbits 000F9B                  _INTCONbits 000FF2                    intlevel2 0000  
          _direction_change 0026   __end_of_direction_routine 121C                  _RCSTA2bits 000F71  
                _OSCCONbits 000FD3                    printf@ap 001A           __CFG_T3CMX$PORTC0 000000  
         __CFG_FOSC$INTIO67 000000                 _pwm_channel 0021  
